package org.iets3.ears.gxw.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.IntentionDescriptorBase;
import jetbrains.mps.intentions.IntentionFactory;
import java.util.Collection;
import jetbrains.mps.intentions.IntentionExecutable;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.intentions.IntentionType;
import jetbrains.mps.smodel.SNodePointer;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import java.util.Collections;
import org.apache.log4j.Logger;
import org.apache.log4j.LogManager;
import jetbrains.mps.intentions.IntentionExecutableBase;
import com.mbeddr.mpsutil.filepicker.behavior.AbstractPicker__BehaviorDescriptor;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import java.io.File;
import java.io.FileWriter;
import java.io.BufferedWriter;
import java.util.Map;
import jetbrains.mps.internal.collections.runtime.MapSequence;
import java.util.LinkedHashMap;
import java.util.HashMap;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import org.iets3.ears.gxw.behavior.PropositionalFormulaSR__BehaviorDescriptor;
import java.util.List;
import org.iets3.ears.gxw.behavior.RequirementChunk__BehaviorDescriptor;
import org.iets3.ears.gxw.behavior.PropositionalFormulaTr__BehaviorDescriptor;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.internal.collections.runtime.IMapping;
import java.io.IOException;
import jetbrains.mps.intentions.IntentionDescriptor;

public final class structuralCoder_Intention extends IntentionDescriptorBase implements IntentionFactory {
  private Collection<IntentionExecutable> myCachedExecutable;
  public structuralCoder_Intention() {
    super(MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x5d97a5a8692b865bL, "org.iets3.ears.gxw.structure.RequirementChunk"), IntentionType.NORMAL, true, new SNodePointer("r:68b642f0-e6ba-47af-af54-70236074fdc6(org.iets3.ears.gxw.intentions)", "6686289246526160991"));
  }
  @Override
  public String getPresentation() {
    return "structuralCoder";
  }
  @Override
  public boolean isApplicable(final SNode node, final EditorContext editorContext) {
    if (!(isApplicableToNode(node, editorContext))) {
      return false;
    }
    return true;
  }
  private boolean isApplicableToNode(final SNode node, final EditorContext editorContext) {
    return true;
  }
  @Override
  public boolean isSurroundWith() {
    return false;
  }
  public Collection<IntentionExecutable> instances(final SNode node, final EditorContext context) {
    if (myCachedExecutable == null) {
      myCachedExecutable = Collections.<IntentionExecutable>singletonList(new structuralCoder_Intention.IntentionImplementation());
    }
    return myCachedExecutable;
  }
  protected static Logger LOG = LogManager.getLogger(structuralCoder_Intention.class);
  /*package*/ final class IntentionImplementation extends IntentionExecutableBase {
    public IntentionImplementation() {
    }
    @Override
    public String getDescription(final SNode node, final EditorContext editorContext) {
      return "Generate Synchronous Dataflow Diagram";
    }
    @Override
    public void execute(final SNode node, final EditorContext editorContext) {
      try {
        String fullInputFilePath = AbstractPicker__BehaviorDescriptor.getCanonicalPath_id5lKnBeAuKov.invoke(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x5d97a5a8692b865bL, 0x3b5bfd85d286c8e9L, "tmpFilePath"))) + "/textGenOutput.txt";

        File inputFile = new File(fullInputFilePath);
        System.out.println("------------> " + inputFile.toURI().toString());
        if (inputFile.exists()) {
          inputFile.delete();
        }
        FileWriter fileWriter = new FileWriter(inputFile.getAbsoluteFile());
        BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
        if (LOG.isInfoEnabled()) {
          LOG.info("" + System.getProperty("user.dir"));
        }

        Map<SNode, String> triggerMap = MapSequence.fromMap(new LinkedHashMap<SNode, String>(16, (float) 0.75, false));
        Map<SNode, String> responseMap = MapSequence.fromMap(new HashMap<SNode, String>());
        for (SNode trigger : ListSequence.fromList(SLinkOperations.getChildren(SLinkOperations.getTarget(node, MetaAdapterFactory.getReferenceLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x5d97a5a8692b865bL, 0x29245ddc2083503cL, "glossary")), MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x1dfca649d8e7ff3L, 0x1dfca649d8e7ff4L, "listOfTriggers")))) {
          MapSequence.fromMap(triggerMap).put(trigger, SPropertyOperations.getString(trigger, MetaAdapterFactory.getProperty(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0xe98cc5716ef655aL, 0x5d97a5a8692a5e10L, "trigger")).replace(" ", ""));
          MapSequence.fromMap(triggerMap).put(trigger, (SPropertyOperations.getString(SLinkOperations.getTarget(trigger, MetaAdapterFactory.getReferenceLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0xe98cc5716ef655aL, 0x59e287abaa84d539L, "componentName")), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")) + SPropertyOperations.getString(trigger, MetaAdapterFactory.getProperty(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0xe98cc5716ef655aL, 0x5d97a5a8692a5e10L, "trigger"))).replace(" ", ""));

        }

        for (SNode systemResponse : ListSequence.fromList(SLinkOperations.getChildren(SLinkOperations.getTarget(node, MetaAdapterFactory.getReferenceLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x5d97a5a8692b865bL, 0x29245ddc2083503cL, "glossary")), MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x1dfca649d8e7ff3L, 0x1dfca649d8e7ffbL, "listOfResponses")))) {
          MapSequence.fromMap(responseMap).put(systemResponse, (SPropertyOperations.getString(SLinkOperations.getTarget(systemResponse, MetaAdapterFactory.getReferenceLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0xe98cc5716ef6557L, 0x6c21f2425f711684L, "componentName")), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")) + SPropertyOperations.getString(systemResponse, MetaAdapterFactory.getProperty(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0xe98cc5716ef6557L, 0x6c21f2425f711686L, "response"))).replace(" ", ""));
        }

        int count = 0;
        for (SNode req : ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x5d97a5a8692b865bL, 0x5d97a5a8692b865cL, "requirements")))) {

          String controllerName = null;
          if (isNotEmptyString(SPropertyOperations.getString(SNodeOperations.getNodeAncestor(req, MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x5d97a5a8692b865bL, "org.iets3.ears.gxw.structure.RequirementChunk"), false, false), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")))) {
            controllerName = SPropertyOperations.getString(SNodeOperations.getNodeAncestor(req, MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x5d97a5a8692b865bL, "org.iets3.ears.gxw.structure.RequirementChunk"), false, false), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"));
          }

          bufferedWriter.write("##  ");

          if (SNodeOperations.isInstanceOf(req, MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x6d72a819db7d92a9L, "org.iets3.ears.gxw.structure.NormalUbiquitousReq"))) {

            System.out.println(" the count is " + count++ + "for NUR");
            bufferedWriter.write("The " + controllerName + " shall " + PropositionalFormulaSR__BehaviorDescriptor.toTextString_id6_TIzovgSIh.invoke(SLinkOperations.getTarget(SNodeOperations.cast(req, MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x6d72a819db7d92a9L, "org.iets3.ears.gxw.structure.NormalUbiquitousReq")), MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x6d72a819db7d92a9L, 0x6979ba361f3afff3L, "systemResponse"))) + "\n");
            SNode responseFormula = SLinkOperations.getTarget(SNodeOperations.cast(req, MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x6d72a819db7d92a9L, "org.iets3.ears.gxw.structure.NormalUbiquitousReq")), MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x6d72a819db7d92a9L, 0x6979ba361f3afff3L, "systemResponse"));


            bufferedWriter.write("[] " + PropositionalFormulaSR__BehaviorDescriptor.toFormulaString_id7A5J6qXdggp.invoke(responseFormula, responseMap));

            bufferedWriter.write("\n\n");

          } else if (SNodeOperations.isInstanceOf(req, MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x415265a05dfb4103L, "org.iets3.ears.gxw.structure.EventDrivenReq"))) {

            // Look for triggers in requirements where there are responses in common with 
            // the responses in the current requirement. 

            List<SNode> untilClauseTriggers = RequirementChunk__BehaviorDescriptor.getTriggersFromReqsWithResponse_id5bowr9XmAJs.invoke(node, SLinkOperations.getTarget(SNodeOperations.cast(req, MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x415265a05dfb4103L, "org.iets3.ears.gxw.structure.EventDrivenReq")), MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x6979ba361f3d77d6L, 0x7985bc66bb09e3a9L, "response")), req);

            String untilClauseTriggersString = "";
            SNode untilClauseTriggersFormula = null;

            for (SNode trigger : ListSequence.fromList(untilClauseTriggers)) {
              System.out.println("going once..." + PropositionalFormulaTr__BehaviorDescriptor.toTextString_id3cWp1ZaFwKU.invoke(trigger));
              if (untilClauseTriggersString.equals("")) {
                untilClauseTriggersString = untilClauseTriggersString + PropositionalFormulaTr__BehaviorDescriptor.toTextString_id3cWp1ZaFwKU.invoke(trigger);
                untilClauseTriggersFormula = trigger;
              } else {
                untilClauseTriggersString = untilClauseTriggersString + " or " + PropositionalFormulaTr__BehaviorDescriptor.toTextString_id3cWp1ZaFwKU.invoke(trigger);
                SNode tmpFormula = untilClauseTriggersFormula;
                untilClauseTriggersFormula = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x333c641fcaa983a2L, "org.iets3.ears.gxw.structure.OrFormulaTr"));
                SLinkOperations.setTarget(SNodeOperations.cast(untilClauseTriggersFormula, MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x333c641fcaa983a2L, "org.iets3.ears.gxw.structure.OrFormulaTr")), MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x333c641fcaa983a7L, 0x333c641fcaa983a9L, "arg1"), tmpFormula);
                SLinkOperations.setTarget(SNodeOperations.cast(untilClauseTriggersFormula, MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x333c641fcaa983a2L, "org.iets3.ears.gxw.structure.OrFormulaTr")), MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x333c641fcaa983a7L, 0x333c641fcaa983aaL, "arg2"), trigger);
              }
            }

            if (untilClauseTriggers.isEmpty()) {
              bufferedWriter.write("When " + PropositionalFormulaTr__BehaviorDescriptor.toTextString_id3cWp1ZaFwKU.invoke(SLinkOperations.getTarget(SNodeOperations.cast(req, MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x415265a05dfb4103L, "org.iets3.ears.gxw.structure.EventDrivenReq")), MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x6979ba361f3d77d6L, 0x7985bc66bb09e3a8L, "trigger"))) + ", the " + controllerName + " shall " + PropositionalFormulaSR__BehaviorDescriptor.toTextString_id6_TIzovgSIh.invoke(SLinkOperations.getTarget(SNodeOperations.cast(req, MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x415265a05dfb4103L, "org.iets3.ears.gxw.structure.EventDrivenReq")), MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x6979ba361f3d77d6L, 0x7985bc66bb09e3a9L, "response"))) + ".\n");
            } else {
              bufferedWriter.write("When " + PropositionalFormulaTr__BehaviorDescriptor.toTextString_id3cWp1ZaFwKU.invoke(SLinkOperations.getTarget(SNodeOperations.cast(req, MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x415265a05dfb4103L, "org.iets3.ears.gxw.structure.EventDrivenReq")), MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x6979ba361f3d77d6L, 0x7985bc66bb09e3a8L, "trigger"))) + ", the " + controllerName + " shall " + PropositionalFormulaSR__BehaviorDescriptor.toTextString_id6_TIzovgSIh.invoke(SLinkOperations.getTarget(SNodeOperations.cast(req, MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x415265a05dfb4103L, "org.iets3.ears.gxw.structure.EventDrivenReq")), MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x6979ba361f3d77d6L, 0x7985bc66bb09e3a9L, "response"))) + " until " + untilClauseTriggersString + ".\n");
            }

            SNode the_req = SNodeOperations.cast(req, MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x415265a05dfb4103L, "org.iets3.ears.gxw.structure.EventDrivenReq"));
            SNode responseFormula = SLinkOperations.getTarget(the_req, MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x6979ba361f3d77d6L, 0x7985bc66bb09e3a9L, "response"));


            if ((untilClauseTriggersFormula == null)) {
              bufferedWriter.write("[] " + "(" + PropositionalFormulaTr__BehaviorDescriptor.toFormulaString_id2Bva3qemetj.invoke(SLinkOperations.getTarget(the_req, MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x6979ba361f3d77d6L, 0x7985bc66bb09e3a8L, "trigger")), triggerMap) + " -> " + PropositionalFormulaSR__BehaviorDescriptor.toFormulaString_id7A5J6qXdggp.invoke(responseFormula, responseMap) + ")");
            } else {
              bufferedWriter.write("[] " + "(" + PropositionalFormulaTr__BehaviorDescriptor.toFormulaString_id2Bva3qemetj.invoke(SLinkOperations.getTarget(the_req, MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x6979ba361f3d77d6L, 0x7985bc66bb09e3a8L, "trigger")), triggerMap) + " -> (" + PropositionalFormulaSR__BehaviorDescriptor.toFormulaString_id7A5J6qXdggp.invoke(responseFormula, responseMap) + " W " + PropositionalFormulaTr__BehaviorDescriptor.toFormulaString_id2Bva3qemetj.invoke(untilClauseTriggersFormula, triggerMap) + "))");

            }

            bufferedWriter.write("\n\n");

          } else if (SNodeOperations.isInstanceOf(req, MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x6a6da4e69725737bL, "org.iets3.ears.gxw.structure.StateDrivenReq"))) {

            List<SNode> untilClauseTriggers = RequirementChunk__BehaviorDescriptor.getTriggersFromReqsWithResponse_id5bowr9XmAJs.invoke(node, SLinkOperations.getTarget(SNodeOperations.cast(req, MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x6a6da4e69725737bL, "org.iets3.ears.gxw.structure.StateDrivenReq")), MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x6a6da4e69725737cL, 0x6a6da4e69736531bL, "response")), req);

            String untilClauseTriggersString = "";
            SNode untilClauseTriggersFormula = null;

            for (SNode trigger : ListSequence.fromList(untilClauseTriggers)) {
              System.out.println("going once..." + PropositionalFormulaTr__BehaviorDescriptor.toTextString_id3cWp1ZaFwKU.invoke(trigger));
              if (untilClauseTriggersString.equals("")) {
                untilClauseTriggersString = untilClauseTriggersString + PropositionalFormulaTr__BehaviorDescriptor.toTextString_id3cWp1ZaFwKU.invoke(trigger);
                untilClauseTriggersFormula = trigger;
              } else {
                untilClauseTriggersString = untilClauseTriggersString + " or " + PropositionalFormulaTr__BehaviorDescriptor.toTextString_id3cWp1ZaFwKU.invoke(trigger);
                SNode tmpFormula = untilClauseTriggersFormula;
                untilClauseTriggersFormula = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x333c641fcaa983a2L, "org.iets3.ears.gxw.structure.OrFormulaTr"));
                SLinkOperations.setTarget(SNodeOperations.cast(untilClauseTriggersFormula, MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x333c641fcaa983a2L, "org.iets3.ears.gxw.structure.OrFormulaTr")), MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x333c641fcaa983a7L, 0x333c641fcaa983a9L, "arg1"), tmpFormula);
                SLinkOperations.setTarget(SNodeOperations.cast(untilClauseTriggersFormula, MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x333c641fcaa983a2L, "org.iets3.ears.gxw.structure.OrFormulaTr")), MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x333c641fcaa983a7L, 0x333c641fcaa983aaL, "arg2"), trigger);
              }
            }

            if (untilClauseTriggers.isEmpty()) {
              bufferedWriter.write("While " + PropositionalFormulaTr__BehaviorDescriptor.toTextString_id3cWp1ZaFwKU.invoke(SLinkOperations.getTarget(SNodeOperations.cast(req, MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x6a6da4e69725737bL, "org.iets3.ears.gxw.structure.StateDrivenReq")), MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x6a6da4e69725737cL, 0x6a6da4e69736531aL, "trigger"))) + ", the " + controllerName + " shall " + PropositionalFormulaSR__BehaviorDescriptor.toTextString_id6_TIzovgSIh.invoke(SLinkOperations.getTarget(SNodeOperations.cast(req, MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x6a6da4e69725737bL, "org.iets3.ears.gxw.structure.StateDrivenReq")), MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x6a6da4e69725737cL, 0x6a6da4e69736531bL, "response"))) + ".\n");
            } else {
              bufferedWriter.write("While " + PropositionalFormulaTr__BehaviorDescriptor.toTextString_id3cWp1ZaFwKU.invoke(SLinkOperations.getTarget(SNodeOperations.cast(req, MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x6a6da4e69725737bL, "org.iets3.ears.gxw.structure.StateDrivenReq")), MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x6a6da4e69725737cL, 0x6a6da4e69736531aL, "trigger"))) + ", the " + controllerName + " shall " + PropositionalFormulaSR__BehaviorDescriptor.toTextString_id6_TIzovgSIh.invoke(SLinkOperations.getTarget(SNodeOperations.cast(req, MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x6a6da4e69725737bL, "org.iets3.ears.gxw.structure.StateDrivenReq")), MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x6a6da4e69725737cL, 0x6a6da4e69736531bL, "response"))) + " until " + untilClauseTriggersString + ".\n");
            }

            SNode the_req = SNodeOperations.cast(req, MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x6a6da4e69725737bL, "org.iets3.ears.gxw.structure.StateDrivenReq"));
            SNode responseFormula = SLinkOperations.getTarget(the_req, MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x6a6da4e69725737cL, 0x6a6da4e69736531bL, "response"));

            if ((untilClauseTriggersFormula == null)) {
              bufferedWriter.write("[] " + "(" + PropositionalFormulaTr__BehaviorDescriptor.toFormulaString_id2Bva3qemetj.invoke(SLinkOperations.getTarget(the_req, MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x6a6da4e69725737cL, 0x6a6da4e69736531aL, "trigger")), triggerMap) + " -> " + PropositionalFormulaSR__BehaviorDescriptor.toFormulaString_id7A5J6qXdggp.invoke(responseFormula, responseMap) + ")");
            } else {
              bufferedWriter.write("[] " + "(" + PropositionalFormulaTr__BehaviorDescriptor.toFormulaString_id2Bva3qemetj.invoke(SLinkOperations.getTarget(the_req, MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x6a6da4e69725737cL, 0x6a6da4e69736531aL, "trigger")), triggerMap) + " -> (" + PropositionalFormulaSR__BehaviorDescriptor.toFormulaString_id7A5J6qXdggp.invoke(responseFormula, responseMap) + " W " + PropositionalFormulaTr__BehaviorDescriptor.toFormulaString_id2Bva3qemetj.invoke(untilClauseTriggersFormula, triggerMap) + "))");

            }
            bufferedWriter.write("\n\n");

          } else if (SNodeOperations.isInstanceOf(req, MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x12815fbacd8318dfL, "org.iets3.ears.gxw.structure.ComplexEventDrivenReq"))) {

            SNode responseFormula = SLinkOperations.getTarget(SNodeOperations.cast(req, MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x12815fbacd8318dfL, "org.iets3.ears.gxw.structure.ComplexEventDrivenReq")), MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x6979ba361f3d77d6L, 0x7985bc66bb09e3a9L, "response"));

            List<SNode> untilClauseTriggers = RequirementChunk__BehaviorDescriptor.getTriggersFromReqsWithResponse_id5bowr9XmAJs.invoke(node, responseFormula, req);

            String untilClauseTriggersString = "";
            SNode untilClauseTriggersFormula = null;

            for (SNode trigger : ListSequence.fromList(untilClauseTriggers)) {
              System.out.println("going once..." + PropositionalFormulaTr__BehaviorDescriptor.toTextString_id3cWp1ZaFwKU.invoke(trigger));
              if (untilClauseTriggersString.equals("")) {
                untilClauseTriggersString = untilClauseTriggersString + PropositionalFormulaTr__BehaviorDescriptor.toTextString_id3cWp1ZaFwKU.invoke(trigger);
                untilClauseTriggersFormula = trigger;
              } else {
                untilClauseTriggersString = untilClauseTriggersString + " or " + PropositionalFormulaTr__BehaviorDescriptor.toTextString_id3cWp1ZaFwKU.invoke(trigger);
                SNode tmpFormula = untilClauseTriggersFormula;
                untilClauseTriggersFormula = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x333c641fcaa983a2L, "org.iets3.ears.gxw.structure.OrFormulaTr"));
                SLinkOperations.setTarget(SNodeOperations.cast(untilClauseTriggersFormula, MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x333c641fcaa983a2L, "org.iets3.ears.gxw.structure.OrFormulaTr")), MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x333c641fcaa983a7L, 0x333c641fcaa983a9L, "arg1"), tmpFormula);
                SLinkOperations.setTarget(SNodeOperations.cast(untilClauseTriggersFormula, MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x333c641fcaa983a2L, "org.iets3.ears.gxw.structure.OrFormulaTr")), MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x333c641fcaa983a7L, 0x333c641fcaa983aaL, "arg2"), trigger);
              }
            }

            if (untilClauseTriggers.isEmpty()) {
              bufferedWriter.write("While " + PropositionalFormulaTr__BehaviorDescriptor.toTextString_id3cWp1ZaFwKU.invoke(SLinkOperations.getTarget(SNodeOperations.cast(req, MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x12815fbacd8318dfL, "org.iets3.ears.gxw.structure.ComplexEventDrivenReq")), MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x12815fbacd8318dfL, 0x12815fbacd831a7aL, "triggerWhile"))) + " when " + PropositionalFormulaTr__BehaviorDescriptor.toTextString_id3cWp1ZaFwKU.invoke(SLinkOperations.getTarget(SNodeOperations.cast(req, MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x12815fbacd8318dfL, "org.iets3.ears.gxw.structure.ComplexEventDrivenReq")), MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x6979ba361f3d77d6L, 0x7985bc66bb09e3a8L, "trigger"))) + ", the " + controllerName + " shall " + PropositionalFormulaSR__BehaviorDescriptor.toTextString_id6_TIzovgSIh.invoke(SLinkOperations.getTarget(SNodeOperations.cast(req, MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x12815fbacd8318dfL, "org.iets3.ears.gxw.structure.ComplexEventDrivenReq")), MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x6979ba361f3d77d6L, 0x7985bc66bb09e3a9L, "response"))) + ".\n");
            } else {
              bufferedWriter.write("While " + PropositionalFormulaTr__BehaviorDescriptor.toTextString_id3cWp1ZaFwKU.invoke(SLinkOperations.getTarget(SNodeOperations.cast(req, MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x12815fbacd8318dfL, "org.iets3.ears.gxw.structure.ComplexEventDrivenReq")), MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x12815fbacd8318dfL, 0x12815fbacd831a7aL, "triggerWhile"))) + " when " + PropositionalFormulaTr__BehaviorDescriptor.toTextString_id3cWp1ZaFwKU.invoke(SLinkOperations.getTarget(SNodeOperations.cast(req, MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x12815fbacd8318dfL, "org.iets3.ears.gxw.structure.ComplexEventDrivenReq")), MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x6979ba361f3d77d6L, 0x7985bc66bb09e3a8L, "trigger"))) + ", the " + controllerName + " shall " + PropositionalFormulaSR__BehaviorDescriptor.toTextString_id6_TIzovgSIh.invoke(SLinkOperations.getTarget(SNodeOperations.cast(req, MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x12815fbacd8318dfL, "org.iets3.ears.gxw.structure.ComplexEventDrivenReq")), MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x6979ba361f3d77d6L, 0x7985bc66bb09e3a9L, "response"))) + " until " + untilClauseTriggersString + ".\n");
            }

            if ((untilClauseTriggersFormula == null)) {
              bufferedWriter.write("[] " + "((" + PropositionalFormulaTr__BehaviorDescriptor.toFormulaString_id2Bva3qemetj.invoke(SLinkOperations.getTarget(SNodeOperations.cast(req, MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x12815fbacd8318dfL, "org.iets3.ears.gxw.structure.ComplexEventDrivenReq")), MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x12815fbacd8318dfL, 0x12815fbacd831a7aL, "triggerWhile")), triggerMap) + " && " + PropositionalFormulaTr__BehaviorDescriptor.toFormulaString_id2Bva3qemetj.invoke(SLinkOperations.getTarget(SNodeOperations.cast(req, MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x12815fbacd8318dfL, "org.iets3.ears.gxw.structure.ComplexEventDrivenReq")), MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x6979ba361f3d77d6L, 0x7985bc66bb09e3a8L, "trigger")), triggerMap) + ")" + " -> (" + PropositionalFormulaSR__BehaviorDescriptor.toFormulaString_id7A5J6qXdggp.invoke(responseFormula, responseMap) + "))");
            } else {
              bufferedWriter.write("[] " + "((" + PropositionalFormulaTr__BehaviorDescriptor.toFormulaString_id2Bva3qemetj.invoke(SLinkOperations.getTarget(SNodeOperations.cast(req, MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x12815fbacd8318dfL, "org.iets3.ears.gxw.structure.ComplexEventDrivenReq")), MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x12815fbacd8318dfL, 0x12815fbacd831a7aL, "triggerWhile")), triggerMap) + " && " + PropositionalFormulaTr__BehaviorDescriptor.toFormulaString_id2Bva3qemetj.invoke(SLinkOperations.getTarget(SNodeOperations.cast(req, MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x12815fbacd8318dfL, "org.iets3.ears.gxw.structure.ComplexEventDrivenReq")), MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x6979ba361f3d77d6L, 0x7985bc66bb09e3a8L, "trigger")), triggerMap) + ")" + " -> (" + PropositionalFormulaSR__BehaviorDescriptor.toFormulaString_id7A5J6qXdggp.invoke(responseFormula, responseMap) + " W " + PropositionalFormulaTr__BehaviorDescriptor.toFormulaString_id2Bva3qemetj.invoke(untilClauseTriggersFormula, triggerMap) + "))");

            }
            bufferedWriter.write("\n\n");

          } else if (SNodeOperations.isInstanceOf(req, MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x12815fbacd838ed5L, "org.iets3.ears.gxw.structure.UnwantedReq"))) {

            SNode responseFormula = SLinkOperations.getTarget(SNodeOperations.cast(req, MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x12815fbacd838ed5L, "org.iets3.ears.gxw.structure.UnwantedReq")), MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x6a6da4e69725737cL, 0x6a6da4e69736531bL, "response"));

            List<SNode> untilClauseTriggers = RequirementChunk__BehaviorDescriptor.getTriggersFromReqsWithResponse_id5bowr9XmAJs.invoke(node, responseFormula, req);

            String untilClauseTriggersString = "";
            SNode untilClauseTriggersFormula = null;

            for (SNode trigger : ListSequence.fromList(untilClauseTriggers)) {
              if (untilClauseTriggersString.equals("")) {
                untilClauseTriggersString = untilClauseTriggersString + PropositionalFormulaTr__BehaviorDescriptor.toTextString_id3cWp1ZaFwKU.invoke(trigger);
                untilClauseTriggersFormula = trigger;
              } else {
                untilClauseTriggersString = untilClauseTriggersString + " or " + PropositionalFormulaTr__BehaviorDescriptor.toTextString_id3cWp1ZaFwKU.invoke(trigger);
                SNode tmpFormula = untilClauseTriggersFormula;
                untilClauseTriggersFormula = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x333c641fcaa983a2L, "org.iets3.ears.gxw.structure.OrFormulaTr"));
                SLinkOperations.setTarget(SNodeOperations.cast(untilClauseTriggersFormula, MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x333c641fcaa983a2L, "org.iets3.ears.gxw.structure.OrFormulaTr")), MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x333c641fcaa983a7L, 0x333c641fcaa983a9L, "arg1"), tmpFormula);
                SLinkOperations.setTarget(SNodeOperations.cast(untilClauseTriggersFormula, MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x333c641fcaa983a2L, "org.iets3.ears.gxw.structure.OrFormulaTr")), MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x333c641fcaa983a7L, 0x333c641fcaa983aaL, "arg2"), trigger);
              }
            }

            if (untilClauseTriggers.isEmpty()) {
              bufferedWriter.write("While " + PropositionalFormulaTr__BehaviorDescriptor.toTextString_id3cWp1ZaFwKU.invoke(SLinkOperations.getTarget(SNodeOperations.cast(req, MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x12815fbacd838ed5L, "org.iets3.ears.gxw.structure.UnwantedReq")), MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x12815fbacd838ed5L, 0x71ef66f6351cf144L, "triggerWhile"))) + " if " + PropositionalFormulaTr__BehaviorDescriptor.toTextString_id3cWp1ZaFwKU.invoke(SLinkOperations.getTarget(SNodeOperations.cast(req, MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x12815fbacd838ed5L, "org.iets3.ears.gxw.structure.UnwantedReq")), MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x6a6da4e69725737cL, 0x6a6da4e69736531aL, "trigger"))) + ", the " + controllerName + " shall " + PropositionalFormulaSR__BehaviorDescriptor.toTextString_id6_TIzovgSIh.invoke(SLinkOperations.getTarget(SNodeOperations.cast(req, MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x12815fbacd838ed5L, "org.iets3.ears.gxw.structure.UnwantedReq")), MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x6a6da4e69725737cL, 0x6a6da4e69736531bL, "response"))) + ".\n");
            } else {
              bufferedWriter.write("While " + PropositionalFormulaTr__BehaviorDescriptor.toTextString_id3cWp1ZaFwKU.invoke(SLinkOperations.getTarget(SNodeOperations.cast(req, MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x12815fbacd838ed5L, "org.iets3.ears.gxw.structure.UnwantedReq")), MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x12815fbacd838ed5L, 0x71ef66f6351cf144L, "triggerWhile"))) + " if " + PropositionalFormulaTr__BehaviorDescriptor.toTextString_id3cWp1ZaFwKU.invoke(SLinkOperations.getTarget(SNodeOperations.cast(req, MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x12815fbacd838ed5L, "org.iets3.ears.gxw.structure.UnwantedReq")), MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x6a6da4e69725737cL, 0x6a6da4e69736531aL, "trigger"))) + ", the " + controllerName + " shall " + PropositionalFormulaSR__BehaviorDescriptor.toTextString_id6_TIzovgSIh.invoke(SLinkOperations.getTarget(SNodeOperations.cast(req, MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x12815fbacd838ed5L, "org.iets3.ears.gxw.structure.UnwantedReq")), MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x6a6da4e69725737cL, 0x6a6da4e69736531bL, "response"))) + " until " + untilClauseTriggersString + ".\n");
            }

            if ((untilClauseTriggersFormula == null)) {
              bufferedWriter.write("[] " + "((" + PropositionalFormulaTr__BehaviorDescriptor.toFormulaString_id2Bva3qemetj.invoke(SLinkOperations.getTarget(SNodeOperations.cast(req, MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x12815fbacd838ed5L, "org.iets3.ears.gxw.structure.UnwantedReq")), MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x12815fbacd838ed5L, 0x71ef66f6351cf144L, "triggerWhile")), triggerMap) + " && " + PropositionalFormulaTr__BehaviorDescriptor.toFormulaString_id2Bva3qemetj.invoke(SLinkOperations.getTarget(SNodeOperations.cast(req, MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x12815fbacd838ed5L, "org.iets3.ears.gxw.structure.UnwantedReq")), MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x6a6da4e69725737cL, 0x6a6da4e69736531aL, "trigger")), triggerMap) + ")" + " -> (" + PropositionalFormulaSR__BehaviorDescriptor.toFormulaString_id7A5J6qXdggp.invoke(responseFormula, responseMap) + "))");
            } else {
              bufferedWriter.write("[] " + "((" + PropositionalFormulaTr__BehaviorDescriptor.toFormulaString_id2Bva3qemetj.invoke(SLinkOperations.getTarget(SNodeOperations.cast(req, MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x12815fbacd838ed5L, "org.iets3.ears.gxw.structure.UnwantedReq")), MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x12815fbacd838ed5L, 0x71ef66f6351cf144L, "triggerWhile")), triggerMap) + " && " + PropositionalFormulaTr__BehaviorDescriptor.toFormulaString_id2Bva3qemetj.invoke(SLinkOperations.getTarget(SNodeOperations.cast(req, MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x12815fbacd838ed5L, "org.iets3.ears.gxw.structure.UnwantedReq")), MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x6a6da4e69725737cL, 0x6a6da4e69736531aL, "trigger")), triggerMap) + ")" + " -> (" + PropositionalFormulaSR__BehaviorDescriptor.toFormulaString_id7A5J6qXdggp.invoke(responseFormula, responseMap) + " W " + PropositionalFormulaTr__BehaviorDescriptor.toFormulaString_id2Bva3qemetj.invoke(untilClauseTriggersFormula, triggerMap) + "))");

            }
            bufferedWriter.write("\n\n");
          }
        }

        List<SNode> listOfInvariants = SLinkOperations.getChildren(SLinkOperations.getTarget(node, MetaAdapterFactory.getReferenceLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x5d97a5a8692b865bL, 0x29245ddc2083503cL, "glossary")), MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x1dfca649d8e7ff3L, 0x71ef66f635606fa0L, "listOfInvariants"));

        for (SNode invariant : ListSequence.fromList(listOfInvariants)) {
          if (SNodeOperations.isInstanceOf(invariant, MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x71ef66f635606f95L, "org.iets3.ears.gxw.structure.TriggerInvariant"))) {
            bufferedWriter.write("[] (" + PropositionalFormulaTr__BehaviorDescriptor.toFormulaString_id2Bva3qemetj.invoke(SLinkOperations.getTarget(SNodeOperations.cast(invariant, MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x71ef66f635606f95L, "org.iets3.ears.gxw.structure.TriggerInvariant")), MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x71ef66f635606f95L, 0x71ef66f635606f9cL, "triggerInvariant")), triggerMap) + ")");
            bufferedWriter.write("\n");
          } else if (SNodeOperations.isInstanceOf(invariant, MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x71ef66f635606f96L, "org.iets3.ears.gxw.structure.ResponseInvariant"))) {
            bufferedWriter.write("[] (" + PropositionalFormulaSR__BehaviorDescriptor.toFormulaString_id7A5J6qXdggp.invoke(SLinkOperations.getTarget(SNodeOperations.cast(invariant, MetaAdapterFactory.getConcept(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x71ef66f635606f96L, "org.iets3.ears.gxw.structure.ResponseInvariant")), MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x71ef66f635606f96L, 0x71ef66f635606f9eL, "responseInvariant")), responseMap) + ")");
            bufferedWriter.write("\n");
          }
        }

        bufferedWriter.write("\n");

        bufferedWriter.write("INPUT ");
        for (IMapping<SNode, String> trigger : MapSequence.fromMap(triggerMap)) {
          bufferedWriter.write(trigger.value());
          if (MapSequence.fromMap(triggerMap).last().value() != trigger.value()) {
            bufferedWriter.write(", ");
          }
        }

        bufferedWriter.write("\n");

        bufferedWriter.write("OUTPUT ");
        for (IMapping<SNode, String> response : MapSequence.fromMap(responseMap)) {
          bufferedWriter.write(response.value());
          if (MapSequence.fromMap(responseMap).last().value() != response.value()) {
            bufferedWriter.write(", ");
          }
        }
        bufferedWriter.write("\n");

        bufferedWriter.close();
        // now read from the file and make use of it 
        String outputFile = "Output.txt";

        // now use the APIs, the new one 
        if (LOG.isInfoEnabled()) {
          LOG.info("just added");
        }
        RequirementChunk__BehaviorDescriptor.writeToFile_id3ghj88fUYVW.invoke(node, outputFile, RequirementChunk__BehaviorDescriptor.systhesizeSolverOutput_id3ghj88fVJYt.invoke(node, inputFile));

      } catch (IOException e) {
        if (LOG.isInfoEnabled()) {
          LOG.info("the exception is ", e);
        }
      }
    }
    @Override
    public IntentionDescriptor getDescriptor() {
      return structuralCoder_Intention.this;
    }
  }
  private static boolean isNotEmptyString(String str) {
    return str != null && str.length() > 0;
  }
}

package org.iets3.flow.dashboard.structure;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.LinkedList;

public enum FlowStateMode {
  Visited("Visited", 0),
  Current("Current", 1),
  ToCome("ToCome", 2),
  DontCare("DontCare", 3);

  private final String myName;
  public String getName() {
    return myName;
  }
  private final int myValue;
  FlowStateMode(String name, int value) {
    myName = name;
    myValue = value;
  }
  public int getValue() {
    return myValue;
  }
  public String getValueAsString() {
    return Integer.toString(myValue);
  }
  public static List<FlowStateMode> getConstants() {
    List<FlowStateMode> list = ListSequence.fromList(new LinkedList<FlowStateMode>());
    ListSequence.fromList(list).addElement(FlowStateMode.Visited);
    ListSequence.fromList(list).addElement(FlowStateMode.Current);
    ListSequence.fromList(list).addElement(FlowStateMode.ToCome);
    ListSequence.fromList(list).addElement(FlowStateMode.DontCare);
    return list;
  }
  public static FlowStateMode getDefault() {
    return FlowStateMode.ToCome;
  }
  public static FlowStateMode parseValue(String value) {
    if (value == null) {
      return FlowStateMode.getDefault();
    }
    if (value.equals(FlowStateMode.Visited.getValueAsString())) {
      return FlowStateMode.Visited;
    }
    if (value.equals(FlowStateMode.Current.getValueAsString())) {
      return FlowStateMode.Current;
    }
    if (value.equals(FlowStateMode.ToCome.getValueAsString())) {
      return FlowStateMode.ToCome;
    }
    if (value.equals(FlowStateMode.DontCare.getValueAsString())) {
      return FlowStateMode.DontCare;
    }
    return FlowStateMode.getDefault();
  }
}

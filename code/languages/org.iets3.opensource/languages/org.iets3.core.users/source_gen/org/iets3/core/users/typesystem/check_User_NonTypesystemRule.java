package org.iets3.core.users.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.errors.messageTargets.MessageTarget;
import jetbrains.mps.errors.messageTargets.NodeMessageTarget;
import jetbrains.mps.errors.IErrorReporter;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public class check_User_NonTypesystemRule extends AbstractNonTypesystemRule_Runtime implements NonTypesystemRule_Runtime {
  public check_User_NonTypesystemRule() {
  }
  public void applyRule(final SNode user, final TypeCheckingContext typeCheckingContext, IsApplicableStatus status) {
    String m = SPropertyOperations.getString(user, MetaAdapterFactory.getProperty(0xf95247f1a2854e98L, 0x864f7f4b1723a807L, 0x75ac1dcdb56519c4L, 0x75ac1dcdb56519ccL, "email"));
    if ((m != null && m.length() > 0)) {
      if (!(m.contains("@"))) {
        MessageTarget errorTarget = new NodeMessageTarget();
        IErrorReporter _reporter_2309309498 = typeCheckingContext.reportTypeError(user, "invalid email address", "r:5e7dd795-0938-4cb5-ba40-61676fbb65f5(org.iets3.core.users.typesystem)", "8479184967780612431", null, errorTarget);
      }
      if (!(m.contains("."))) {
        MessageTarget errorTarget = new NodeMessageTarget();
        IErrorReporter _reporter_2309309498 = typeCheckingContext.reportTypeError(user, "invalid email address", "r:5e7dd795-0938-4cb5-ba40-61676fbb65f5(org.iets3.core.users.typesystem)", "8479184967780613323", null, errorTarget);
      }
    }
  }
  public SAbstractConcept getApplicableConcept() {
    return MetaAdapterFactory.getConcept(0xf95247f1a2854e98L, 0x864f7f4b1723a807L, 0x75ac1dcdb56519c4L, "org.iets3.core.users.structure.User");
  }
  public IsApplicableStatus isApplicableAndPattern(SNode argument) {
    return new IsApplicableStatus(argument.getConcept().isSubConceptOf(getApplicableConcept()), null);
  }
  public boolean overrides() {
    return false;
  }
}

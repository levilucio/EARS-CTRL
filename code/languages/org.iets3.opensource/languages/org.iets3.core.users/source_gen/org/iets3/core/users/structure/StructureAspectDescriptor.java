package org.iets3.core.users.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.concept.SConceptAdapterById;
import jetbrains.mps.smodel.adapter.structure.concept.SInterfaceConceptAdapterById;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.SNodePointer;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(3);
  /*package*/ final ConceptDescriptor myConceptUser = createDescriptorForUser();
  /*package*/ final ConceptDescriptor myConceptUserDirectory = createDescriptorForUserDirectory();
  /*package*/ final ConceptDescriptor myConceptUserRef = createDescriptorForUserRef();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptUser.getId(), 0);
    myIndexMap.put(myConceptUserDirectory.getId(), 1);
    myIndexMap.put(myConceptUserRef.getId(), 2);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptUser, myConceptUserDirectory, myConceptUserRef);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptUser;
      case 1:
        return myConceptUserDirectory;
      case 2:
        return myConceptUserRef;
      default:
        throw new IllegalStateException();
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    Integer res = null;
    if (c instanceof SConceptAdapterById) {
      res = myIndexMap.get(((SConceptAdapterById) c).getId());
    } else if (c instanceof SInterfaceConceptAdapterById) {
      res = myIndexMap.get(((SInterfaceConceptAdapterById) c).getId());
    }
    return (res == null ? -1 : res);
  }

  private static ConceptDescriptor createDescriptorForUser() {
    return new ConceptDescriptorBuilder("org.iets3.core.users.structure.User", MetaIdFactory.conceptId(0xf95247f1a2854e98L, 0x864f7f4b1723a807L, 0x75ac1dcdb56519c4L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "org.iets3.core.base.structure.IValidNamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0x7b68d745a7b848b9L, 0xbd9c05c0f8725a35L, 0x32f64a31a179034L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x75ac1dcdb56519c7L, "firstName", new SNodePointer("r:c1f7e681-4373-4429-b23f-337a1dd93658(org.iets3.core.users.structure)", "8479184967780604359")), new ConceptDescriptorBuilder.Prop(0x75ac1dcdb56519c9L, "lastName", new SNodePointer("r:c1f7e681-4373-4429-b23f-337a1dd93658(org.iets3.core.users.structure)", "8479184967780604361")), new ConceptDescriptorBuilder.Prop(0x75ac1dcdb56519ccL, "email", new SNodePointer("r:c1f7e681-4373-4429-b23f-337a1dd93658(org.iets3.core.users.structure)", "8479184967780604364"))).properties("firstName", "lastName", "email").sourceNode(new SNodePointer("r:c1f7e681-4373-4429-b23f-337a1dd93658(org.iets3.core.users.structure)", "8479184967780604356")).create();
  }
  private static ConceptDescriptor createDescriptorForUserDirectory() {
    return new ConceptDescriptorBuilder("org.iets3.core.users.structure.UserDirectory", MetaIdFactory.conceptId(0xf95247f1a2854e98L, 0x864f7f4b1723a807L, 0x75ac1dcdb5651a3eL)).super_("com.mbeddr.core.base.structure.Chunk").version(1).super_(MetaIdFactory.conceptId(0xd4280a54f6df4383L, 0xaa41d1b2bffa7eb1L, 0x6315bcc6effb4ea6L)).parents("com.mbeddr.core.base.structure.Chunk", "org.iets3.core.base.structure.IValidNamedConcept", "org.iets3.core.base.structure.ISpecRoot").parentIds(MetaIdFactory.conceptId(0xd4280a54f6df4383L, 0xaa41d1b2bffa7eb1L, 0x6315bcc6effb4ea6L), MetaIdFactory.conceptId(0x7b68d745a7b848b9L, 0xbd9c05c0f8725a35L, 0x32f64a31a179034L), MetaIdFactory.conceptId(0x7b68d745a7b848b9L, 0xbd9c05c0f8725a35L, 0x6c4f9fd23e57eb38L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x75ac1dcdb5651a41L, "users", MetaIdFactory.conceptId(0xf95247f1a2854e98L, 0x864f7f4b1723a807L, 0x75ac1dcdb56519c4L), true, true, false, new SNodePointer("r:c1f7e681-4373-4429-b23f-337a1dd93658(org.iets3.core.users.structure)", "8479184967780604481"))).children(new String[]{"users"}, new boolean[]{true}).rootable().sourceNode(new SNodePointer("r:c1f7e681-4373-4429-b23f-337a1dd93658(org.iets3.core.users.structure)", "8479184967780604478")).create();
  }
  private static ConceptDescriptor createDescriptorForUserRef() {
    return new ConceptDescriptorBuilder("org.iets3.core.users.structure.UserRef", MetaIdFactory.conceptId(0xf95247f1a2854e98L, 0x864f7f4b1723a807L, 0x75ac1dcdb567a3e7L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x75ac1dcdb567a3e8L, "user", MetaIdFactory.conceptId(0xf95247f1a2854e98L, 0x864f7f4b1723a807L, 0x75ac1dcdb56519c4L), false, new SNodePointer("r:c1f7e681-4373-4429-b23f-337a1dd93658(org.iets3.core.users.structure)", "8479184967780770792"))).references("user").sourceNode(new SNodePointer("r:c1f7e681-4373-4429-b23f-337a1dd93658(org.iets3.core.users.structure)", "8479184967780770791")).create();
  }
}

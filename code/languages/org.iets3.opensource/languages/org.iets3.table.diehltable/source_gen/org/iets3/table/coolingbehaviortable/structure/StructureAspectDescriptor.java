package org.iets3.table.coolingbehaviortable.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.concept.SConceptAdapterById;
import jetbrains.mps.smodel.adapter.structure.concept.SInterfaceConceptAdapterById;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.SNodePointer;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(8);
  /*package*/ final ConceptDescriptor myConceptCoolingBehaviorIncDecCell = createDescriptorForCoolingBehaviorIncDecCell();
  /*package*/ final ConceptDescriptor myConceptCoolingBehaviorRow = createDescriptorForCoolingBehaviorRow();
  /*package*/ final ConceptDescriptor myConceptCoolingBehaviorTable = createDescriptorForCoolingBehaviorTable();
  /*package*/ final ConceptDescriptor myConceptDecreasingThreshold = createDescriptorForDecreasingThreshold();
  /*package*/ final ConceptDescriptor myConceptDecreasingValue = createDescriptorForDecreasingValue();
  /*package*/ final ConceptDescriptor myConceptDutyCycleVal = createDescriptorForDutyCycleVal();
  /*package*/ final ConceptDescriptor myConceptIncreasingThreshold = createDescriptorForIncreasingThreshold();
  /*package*/ final ConceptDescriptor myConceptIncreasingValue = createDescriptorForIncreasingValue();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptCoolingBehaviorIncDecCell.getId(), 0);
    myIndexMap.put(myConceptCoolingBehaviorRow.getId(), 1);
    myIndexMap.put(myConceptCoolingBehaviorTable.getId(), 2);
    myIndexMap.put(myConceptDecreasingThreshold.getId(), 3);
    myIndexMap.put(myConceptDecreasingValue.getId(), 4);
    myIndexMap.put(myConceptDutyCycleVal.getId(), 5);
    myIndexMap.put(myConceptIncreasingThreshold.getId(), 6);
    myIndexMap.put(myConceptIncreasingValue.getId(), 7);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptCoolingBehaviorIncDecCell, myConceptCoolingBehaviorRow, myConceptCoolingBehaviorTable, myConceptDecreasingThreshold, myConceptDecreasingValue, myConceptDutyCycleVal, myConceptIncreasingThreshold, myConceptIncreasingValue);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptCoolingBehaviorIncDecCell;
      case 1:
        return myConceptCoolingBehaviorRow;
      case 2:
        return myConceptCoolingBehaviorTable;
      case 3:
        return myConceptDecreasingThreshold;
      case 4:
        return myConceptDecreasingValue;
      case 5:
        return myConceptDutyCycleVal;
      case 6:
        return myConceptIncreasingThreshold;
      case 7:
        return myConceptIncreasingValue;
      default:
        throw new IllegalStateException();
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    Integer res = null;
    if (c instanceof SConceptAdapterById) {
      res = myIndexMap.get(((SConceptAdapterById) c).getId());
    } else if (c instanceof SInterfaceConceptAdapterById) {
      res = myIndexMap.get(((SInterfaceConceptAdapterById) c).getId());
    }
    return (res == null ? -1 : res);
  }

  private static ConceptDescriptor createDescriptorForCoolingBehaviorIncDecCell() {
    return new ConceptDescriptorBuilder("org.iets3.table.coolingbehaviortable.structure.CoolingBehaviorIncDecCell", MetaIdFactory.conceptId(0xf0094c7d7df04fa9L, 0x9be74ba73a8db962L, 0x671fcf1785cf20c1L)).version(1).interface_().sourceNode(new SNodePointer("r:4cfd5e11-f7f0-4e58-82bd-8b7f0a30d46f(org.iets3.table.coolingbehaviortable.structure)", "7430885610120749249")).create();
  }
  private static ConceptDescriptor createDescriptorForCoolingBehaviorRow() {
    return new ConceptDescriptorBuilder("org.iets3.table.coolingbehaviortable.structure.CoolingBehaviorRow", MetaIdFactory.conceptId(0xf0094c7d7df04fa9L, 0x9be74ba73a8db962L, 0x671fcf1785cecf62L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "org.iets3.table.core.structure.Row", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xaf3ce814fe754814L, 0x9ec91c4a57d0f39dL, 0x671fcf1785ce8ce7L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x671fcf1785cf30e4L, "IncreasingInterval", MetaIdFactory.conceptId(0xf0094c7d7df04fa9L, 0x9be74ba73a8db962L, 0x671fcf1785ced8f2L), false, false, false, new SNodePointer("r:4cfd5e11-f7f0-4e58-82bd-8b7f0a30d46f(org.iets3.table.coolingbehaviortable.structure)", "7430885610120753380")), new ConceptDescriptorBuilder.Link(0x671fcf1785cf30e6L, "DecreasingInterval", MetaIdFactory.conceptId(0xf0094c7d7df04fa9L, 0x9be74ba73a8db962L, 0x671fcf1785ced8f5L), false, false, false, new SNodePointer("r:4cfd5e11-f7f0-4e58-82bd-8b7f0a30d46f(org.iets3.table.coolingbehaviortable.structure)", "7430885610120753382")), new ConceptDescriptorBuilder.Link(0x671fcf1785cf3500L, "MWPValue", MetaIdFactory.conceptId(0xf0094c7d7df04fa9L, 0x9be74ba73a8db962L, 0x671fcf1785cf34fdL), false, false, false, new SNodePointer("r:4cfd5e11-f7f0-4e58-82bd-8b7f0a30d46f(org.iets3.table.coolingbehaviortable.structure)", "7430885610120754432"))).children(new String[]{"IncreasingInterval", "DecreasingInterval", "MWPValue"}, new boolean[]{false, false, false}).sourceNode(new SNodePointer("r:4cfd5e11-f7f0-4e58-82bd-8b7f0a30d46f(org.iets3.table.coolingbehaviortable.structure)", "7430885610120728418")).create();
  }
  private static ConceptDescriptor createDescriptorForCoolingBehaviorTable() {
    return new ConceptDescriptorBuilder("org.iets3.table.coolingbehaviortable.structure.CoolingBehaviorTable", MetaIdFactory.conceptId(0xf0094c7d7df04fa9L, 0x9be74ba73a8db962L, 0x671fcf1785cecd7dL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "org.iets3.table.core.structure.Table", "jetbrains.mps.lang.core.structure.INamedConcept", "jetbrains.mps.execution.util.structure.IMainClass").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xaf3ce814fe754814L, 0x9ec91c4a57d0f39dL, 0x671fcf1785ce8cd4L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L), MetaIdFactory.conceptId(0x4caf0310491e41f5L, 0x8a9b2006b3a94898L, 0x40c1a7cb987d20d5L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x7f5c34ec2da40743L, "increasingThreshold", MetaIdFactory.conceptId(0xf0094c7d7df04fa9L, 0x9be74ba73a8db962L, 0x7f5c34ec2da21a35L), false, false, false, new SNodePointer("r:4cfd5e11-f7f0-4e58-82bd-8b7f0a30d46f(org.iets3.table.coolingbehaviortable.structure)", "9177268329656878915")), new ConceptDescriptorBuilder.Link(0x7f5c34ec2da40747L, "decreasingThreshold", MetaIdFactory.conceptId(0xf0094c7d7df04fa9L, 0x9be74ba73a8db962L, 0x7f5c34ec2da21a44L), false, false, false, new SNodePointer("r:4cfd5e11-f7f0-4e58-82bd-8b7f0a30d46f(org.iets3.table.coolingbehaviortable.structure)", "9177268329656878919")), new ConceptDescriptorBuilder.Link(0x671fcf1785d25111L, "drow", MetaIdFactory.conceptId(0xf0094c7d7df04fa9L, 0x9be74ba73a8db962L, 0x671fcf1785cecf62L), true, true, false, new SNodePointer("r:4cfd5e11-f7f0-4e58-82bd-8b7f0a30d46f(org.iets3.table.coolingbehaviortable.structure)", "7430885610120958225"))).children(new String[]{"increasingThreshold", "decreasingThreshold", "drow"}, new boolean[]{false, false, true}).rootable().alias("Cooling Behavior Root", "").sourceNode(new SNodePointer("r:4cfd5e11-f7f0-4e58-82bd-8b7f0a30d46f(org.iets3.table.coolingbehaviortable.structure)", "7430885610120727933")).create();
  }
  private static ConceptDescriptor createDescriptorForDecreasingThreshold() {
    return new ConceptDescriptorBuilder("org.iets3.table.coolingbehaviortable.structure.DecreasingThreshold", MetaIdFactory.conceptId(0xf0094c7d7df04fa9L, 0x9be74ba73a8db962L, 0x7f5c34ec2da21a44L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "org.iets3.table.core.structure.Row", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xaf3ce814fe754814L, 0x9ec91c4a57d0f39dL, 0x671fcf1785ce8ce7L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x7f5c34ec2da21a47L, "Min", new SNodePointer("r:4cfd5e11-f7f0-4e58-82bd-8b7f0a30d46f(org.iets3.table.coolingbehaviortable.structure)", "9177268329656752711")), new ConceptDescriptorBuilder.Prop(0x7f5c34ec2da21a49L, "Max", new SNodePointer("r:4cfd5e11-f7f0-4e58-82bd-8b7f0a30d46f(org.iets3.table.coolingbehaviortable.structure)", "9177268329656752713"))).properties("Min", "Max").sourceNode(new SNodePointer("r:4cfd5e11-f7f0-4e58-82bd-8b7f0a30d46f(org.iets3.table.coolingbehaviortable.structure)", "9177268329656752708")).create();
  }
  private static ConceptDescriptor createDescriptorForDecreasingValue() {
    return new ConceptDescriptorBuilder("org.iets3.table.coolingbehaviortable.structure.DecreasingValue", MetaIdFactory.conceptId(0xf0094c7d7df04fa9L, 0x9be74ba73a8db962L, 0x671fcf1785ced8f5L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "org.iets3.table.coolingbehaviortable.structure.CoolingBehaviorIncDecCell").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xf0094c7d7df04fa9L, 0x9be74ba73a8db962L, 0x671fcf1785cf20c1L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x32ddd37c32f3697dL, "To", new SNodePointer("r:4cfd5e11-f7f0-4e58-82bd-8b7f0a30d46f(org.iets3.table.coolingbehaviortable.structure)", "3665318202133670269")), new ConceptDescriptorBuilder.Prop(0x32ddd37c32f3697fL, "From", new SNodePointer("r:4cfd5e11-f7f0-4e58-82bd-8b7f0a30d46f(org.iets3.table.coolingbehaviortable.structure)", "3665318202133670271"))).properties("To", "From").alias("Decreasing-Interval", "").sourceNode(new SNodePointer("r:4cfd5e11-f7f0-4e58-82bd-8b7f0a30d46f(org.iets3.table.coolingbehaviortable.structure)", "7430885610120730869")).create();
  }
  private static ConceptDescriptor createDescriptorForDutyCycleVal() {
    return new ConceptDescriptorBuilder("org.iets3.table.coolingbehaviortable.structure.DutyCycleVal", MetaIdFactory.conceptId(0xf0094c7d7df04fa9L, 0x9be74ba73a8db962L, 0x671fcf1785cf34fdL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x671fcf1785cf3df0L, "dutyCycle", new SNodePointer("r:4cfd5e11-f7f0-4e58-82bd-8b7f0a30d46f(org.iets3.table.coolingbehaviortable.structure)", "7430885610120756720"))).properties("dutyCycle").alias("Duty Cycle", "").sourceNode(new SNodePointer("r:4cfd5e11-f7f0-4e58-82bd-8b7f0a30d46f(org.iets3.table.coolingbehaviortable.structure)", "7430885610120754429")).create();
  }
  private static ConceptDescriptor createDescriptorForIncreasingThreshold() {
    return new ConceptDescriptorBuilder("org.iets3.table.coolingbehaviortable.structure.IncreasingThreshold", MetaIdFactory.conceptId(0xf0094c7d7df04fa9L, 0x9be74ba73a8db962L, 0x7f5c34ec2da21a35L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "org.iets3.table.core.structure.Row").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xaf3ce814fe754814L, 0x9ec91c4a57d0f39dL, 0x671fcf1785ce8ce7L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x7f5c34ec2da21a38L, "Min", new SNodePointer("r:4cfd5e11-f7f0-4e58-82bd-8b7f0a30d46f(org.iets3.table.coolingbehaviortable.structure)", "9177268329656752696")), new ConceptDescriptorBuilder.Prop(0x7f5c34ec2da21a3aL, "Max", new SNodePointer("r:4cfd5e11-f7f0-4e58-82bd-8b7f0a30d46f(org.iets3.table.coolingbehaviortable.structure)", "9177268329656752698"))).properties("Min", "Max").sourceNode(new SNodePointer("r:4cfd5e11-f7f0-4e58-82bd-8b7f0a30d46f(org.iets3.table.coolingbehaviortable.structure)", "9177268329656752693")).create();
  }
  private static ConceptDescriptor createDescriptorForIncreasingValue() {
    return new ConceptDescriptorBuilder("org.iets3.table.coolingbehaviortable.structure.IncreasingValue", MetaIdFactory.conceptId(0xf0094c7d7df04fa9L, 0x9be74ba73a8db962L, 0x671fcf1785ced8f2L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "org.iets3.table.coolingbehaviortable.structure.CoolingBehaviorIncDecCell").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xf0094c7d7df04fa9L, 0x9be74ba73a8db962L, 0x671fcf1785cf20c1L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x32ddd37c32f36982L, "To", new SNodePointer("r:4cfd5e11-f7f0-4e58-82bd-8b7f0a30d46f(org.iets3.table.coolingbehaviortable.structure)", "3665318202133670274")), new ConceptDescriptorBuilder.Prop(0x32ddd37c32f36984L, "From", new SNodePointer("r:4cfd5e11-f7f0-4e58-82bd-8b7f0a30d46f(org.iets3.table.coolingbehaviortable.structure)", "3665318202133670276"))).properties("To", "From").alias("Increasing-Interval", "").sourceNode(new SNodePointer("r:4cfd5e11-f7f0-4e58-82bd-8b7f0a30d46f(org.iets3.table.coolingbehaviortable.structure)", "7430885610120730866")).create();
  }
}

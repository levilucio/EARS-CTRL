package org.iets3.table.coolingbehaviortable.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import java.util.Map;
import org.jetbrains.mps.openapi.language.SProperty;
import jetbrains.mps.smodel.runtime.PropertyConstraintsDescriptor;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.base.BasePropertyConstraintsDescriptor;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class DutyCycleVal_Constraints extends BaseConstraintsDescriptor {
  public DutyCycleVal_Constraints() {
    super(MetaAdapterFactory.getConcept(0xf0094c7d7df04fa9L, 0x9be74ba73a8db962L, 0x671fcf1785cf34fdL, "org.iets3.table.coolingbehaviortable.structure.DutyCycleVal"));
  }

  @Override
  protected Map<SProperty, PropertyConstraintsDescriptor> getSpecifiedProperties() {
    Map<SProperty, PropertyConstraintsDescriptor> properties = new HashMap<SProperty, PropertyConstraintsDescriptor>();
    properties.put(MetaAdapterFactory.getProperty(0xf0094c7d7df04fa9L, 0x9be74ba73a8db962L, 0x671fcf1785cf34fdL, 0x671fcf1785cf3df0L, "dutyCycle"), new BasePropertyConstraintsDescriptor(MetaIdFactory.propId(0xf0094c7d7df04fa9L, 0x9be74ba73a8db962L, 0x671fcf1785cf34fdL, 0x671fcf1785cf3df0L), this) {
      @Override
      public boolean hasOwnValidator() {
        return true;
      }
      @Override
      public boolean validateValue(SNode node, String propertyValue) {
        String propertyName = "dutyCycle";
        if (isEmptyString((SPropertyOperations.getString(propertyValue)))) {
          return false;
        }
        return true;
      }
    });
    return properties;
  }
  private static boolean isEmptyString(String str) {
    return str == null || str.length() == 0;
  }
}

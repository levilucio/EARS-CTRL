package org.iets3.core.attributes.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import jetbrains.mps.openapi.editor.EditorContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.cells.EditorCell_Property;
import jetbrains.mps.nodeEditor.cells.ModelAccessor;
import org.iets3.core.attributes.behavior.IAttribute__BehaviorDescriptor;
import jetbrains.mps.util.EqualUtil;
import jetbrains.mps.openapi.editor.cells.CellActionType;
import jetbrains.mps.editor.runtime.cells.EmptyCellAction;
import jetbrains.mps.openapi.editor.style.Style;
import jetbrains.mps.editor.runtime.style.StyleImpl;
import jetbrains.mps.editor.runtime.style.StyleAttributes;
import jetbrains.mps.nodeEditor.MPSFonts;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;
import jetbrains.mps.lang.editor.cellProviders.SingleRoleCellProvider;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import jetbrains.mps.openapi.editor.menus.transformation.SNodeLocation;
import jetbrains.mps.editor.runtime.impl.cellActions.CellAction_DeleteSmart;
import jetbrains.mps.openapi.editor.cells.DefaultSubstituteInfo;
import jetbrains.mps.nodeEditor.cellMenu.OldNewCompositeSubstituteInfo;
import jetbrains.mps.nodeEditor.cellMenu.SChildSubstituteInfo;
import jetbrains.mps.nodeEditor.cellMenu.DefaultChildSubstituteInfo;
import org.iets3.core.attributes.behavior.IComputedValueAttribute__BehaviorDescriptor;
import com.mbeddr.mpsutil.editor.querylist.runtime.QueryListContext;
import jetbrains.mps.baseLanguage.closures.runtime._FunctionTypes;
import com.mbeddr.mpsutil.editor.querylist.runtime.EditorCell_QueryList;
import com.mbeddr.mpsutil.editor.querylist.runtime.QueryListHandler;
import jetbrains.mps.nodeEditor.cellLayout.CellLayout_Horizontal;
import jetbrains.mps.nodeEditor.cellProviders.AbstractCellListHandler;
import jetbrains.mps.nodeEditor.cellActions.CellAction_DeleteNode;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.openapi.editor.cells.SubstituteInfo;
import com.mbeddr.mpsutil.editor.querylist.runtime.SubstituteInfoFactory;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.util.Computable;
import jetbrains.mps.nodeEditor.cellLayout.CellLayout_Vertical;
import jetbrains.mps.nodeEditor.InlineCellProvider;
import org.iets3.core.attributes.behavior.IValueAttribute__BehaviorDescriptor;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;

public class IComputedValueAttribute_Editor extends DefaultNodeEditor {
  public EditorCell createEditorCell(EditorContext editorContext, SNode node) {
    return this.createCollection_422lk5_a(editorContext, node);
  }
  private EditorCell createCollection_422lk5_a(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(editorContext, node);
    editorCell.setCellId("Collection_422lk5_a");
    editorCell.setBig(true);
    editorCell.addEditorCell(this.createReadOnlyModelAccessor_422lk5_a0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_422lk5_b0(editorContext, node));
    editorCell.addEditorCell(this.createRefNode_422lk5_c0(editorContext, node));
    if (renderingCondition_422lk5_a3a(node, editorContext)) {
      editorCell.addEditorCell(this.createCollection_422lk5_d0(editorContext, node));
    }
    return editorCell;
  }
  private EditorCell createReadOnlyModelAccessor_422lk5_a0(final EditorContext editorContext, final SNode node) {
    EditorCell_Property editorCell = EditorCell_Property.create(editorContext, new ModelAccessor() {
      public String getText() {
        return (String) IAttribute__BehaviorDescriptor.label_id1HqphBIQCVt.invoke(node);
      }
      public void setText(String s) {
      }
      public boolean isValidText(String s) {
        return EqualUtil.equals(s, getText());
      }
    }, node);
    editorCell.setAction(CellActionType.DELETE, EmptyCellAction.getInstance());
    editorCell.setAction(CellActionType.BACKSPACE, EmptyCellAction.getInstance());
    editorCell.setCellId("ReadOnlyModelAccessor_422lk5_a0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.FONT_STYLE, 0, MPSFonts.BOLD);
    editorCell.getStyle().putAll(style);
    return editorCell;
  }
  private EditorCell createConstant_422lk5_b0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, ":");
    editorCell.setCellId("Constant_422lk5_b0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.PUNCTUATION_LEFT, 0, true);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createRefNode_422lk5_c0(EditorContext editorContext, SNode node) {
    SingleRoleCellProvider provider = new IComputedValueAttribute_Editor.valueSingleRoleHandler_422lk5_c0(node, MetaAdapterFactory.getContainmentLink(0x583939beded04735L, 0xa055a74f8477fc34L, 0x1b5a6519ee876afdL, 0x1b5a6519ee9ef8b6L, "value"), editorContext);
    return provider.createCell();
  }
  private class valueSingleRoleHandler_422lk5_c0 extends SingleRoleCellProvider {
    public valueSingleRoleHandler_422lk5_c0(SNode ownerNode, SContainmentLink containmentLink, EditorContext context) {
      super(ownerNode, containmentLink, context);
    }
    protected EditorCell createChildCell(SNode child) {
      myEditorContext.getCellFactory().pushCellContext();
      myEditorContext.getCellFactory().setNodeLocation(new SNodeLocation.FromNode(child));
      try {
        EditorCell editorCell = super.createChildCell(child);
        editorCell.setAction(CellActionType.DELETE, new CellAction_DeleteSmart(myOwnerNode, MetaAdapterFactory.getContainmentLink(0x583939beded04735L, 0xa055a74f8477fc34L, 0x1b5a6519ee876afdL, 0x1b5a6519ee9ef8b6L, "value"), child));
        editorCell.setAction(CellActionType.BACKSPACE, new CellAction_DeleteSmart(myOwnerNode, MetaAdapterFactory.getContainmentLink(0x583939beded04735L, 0xa055a74f8477fc34L, 0x1b5a6519ee876afdL, 0x1b5a6519ee9ef8b6L, "value"), child));
        installCellInfo(child, editorCell);
        return editorCell;
      } finally {
        myEditorContext.getCellFactory().popCellContext();
      }
    }

    protected boolean isCompatibilityMode() {
      return false;
    }

    private void installCellInfo(SNode child, EditorCell editorCell) {
      if (editorCell.getSubstituteInfo() == null || editorCell.getSubstituteInfo() instanceof DefaultSubstituteInfo) {
        editorCell.setSubstituteInfo(new OldNewCompositeSubstituteInfo(myEditorContext, new SChildSubstituteInfo(editorCell, myOwnerNode, MetaAdapterFactory.getContainmentLink(0x583939beded04735L, 0xa055a74f8477fc34L, 0x1b5a6519ee876afdL, 0x1b5a6519ee9ef8b6L, "value"), child), new DefaultChildSubstituteInfo(myOwnerNode, myContainmentLink.getDeclarationNode(), myEditorContext)));
      }
      if (editorCell.getRole() == null) {
        editorCell.setRole("value");
      }
    }
    @Override
    protected EditorCell createEmptyCell() {
      myEditorContext.getCellFactory().pushCellContext();
      myEditorContext.getCellFactory().setNodeLocation(new SNodeLocation.FromParentAndLink(myOwnerNode, MetaAdapterFactory.getContainmentLink(0x583939beded04735L, 0xa055a74f8477fc34L, 0x1b5a6519ee876afdL, 0x1b5a6519ee9ef8b6L, "value")));
      try {
        EditorCell editorCell = super.createEmptyCell();
        editorCell.setCellId("empty_value");
        installCellInfo(null, editorCell);
        return editorCell;
      } finally {
        myEditorContext.getCellFactory().popCellContext();
      }
    }
    protected String getNoTargetText() {
      return "<no value>";
    }
  }
  private EditorCell createCollection_422lk5_d0(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createIndent2(editorContext, node);
    editorCell.setCellId("Collection_422lk5_d0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.SELECTABLE, 0, false);
    editorCell.getStyle().putAll(style);
    editorCell.addEditorCell(this.createConstant_422lk5_a3a(editorContext, node));
    editorCell.addEditorCell(this.createQueryList_422lk5_b3a(editorContext, node));
    editorCell.addEditorCell(this.createConstant_422lk5_c3a(editorContext, node));
    editorCell.addEditorCell(this.createQueryList_422lk5_d3a(editorContext, node));
    return editorCell;
  }
  private static boolean renderingCondition_422lk5_a3a(SNode node, EditorContext editorContext) {
    return IComputedValueAttribute__BehaviorDescriptor.computedValue_id1HqphBIwaPM.invoke(node) != null;
  }
  private EditorCell createConstant_422lk5_a3a(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "computed:");
    editorCell.setCellId("Constant_422lk5_a3a");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createQueryList_422lk5_b3a(final EditorContext editorContext, final SNode node) {

    return QueryListContext.computeWithContext(new QueryListContext(node), new _FunctionTypes._return_P0_E0<EditorCell_QueryList>() {
      public EditorCell_QueryList invoke() {
        QueryListHandler handler = new IComputedValueAttribute_Editor.QueryListHandler_422lk5_b3a(editorContext, node);

        EditorCell_QueryList editorCell = handler.createCells(editorContext, new CellLayout_Horizontal());
        editorCell.setCellId("QueryList_422lk5_b3a");
        Style style = new StyleImpl();
        style.set(StyleAttributes.READ_ONLY, 0, true);
        editorCell.getStyle().putAll(style);
        return editorCell;
      }
    });

  }
  private static class QueryListHandler_422lk5_b3a extends QueryListHandler {
    public QueryListHandler_422lk5_b3a(EditorContext context, SNode ownerNode) {
      super(context, ownerNode);
    }
    public EditorCell createNodeCell(EditorContext editorContext, SNode elementNode) {
      EditorCell elementCell = super.createNodeCell(editorContext, elementNode);
      this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext);
      return elementCell;
    }
    @Override
    public EditorCell createEmptyCell(EditorContext editorContext) {
      EditorCell emptyCell = null;
      emptyCell = super.createEmptyCell(editorContext);
      this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext);
      return postProcessEmptyCell(emptyCell);
    }
    public void installElementCellActions(SNode listOwner, SNode elementNode, EditorCell elementCell, EditorContext editorContext) {
      if (elementCell.getUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET) == null) {
        elementCell.putUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET, AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET);
        if (elementNode != null) {

          elementCell.setAction(CellActionType.DELETE, new CellAction_DeleteNode(elementNode));


        }
        if (elementCell.getSubstituteInfo() == null) {
          elementCell.setSubstituteInfo(getSubstituteInfo(elementNode));
        }
      }
    }
    private Object executeQuery(final SNode node, final EditorContext editorContext) {
      return (SNode) IComputedValueAttribute__BehaviorDescriptor.computedValue_id1HqphBIwaPM.invoke(node);
    }
    @Override
    public Iterable<? extends SNode> getNodesForList(final SNode node) {
      Object queryResult = executeQuery(node, getEditorContext());
      if (queryResult instanceof Iterable) {
        return (Iterable<? extends SNode>) queryResult;
      } else {
        return Sequence.<SNode>singleton((SNode) queryResult);
      }
    }
    @Override
    public SubstituteInfo getSubstituteInfo(final SNode node, final SNode childNode, final SubstituteInfoFactory factory, final EditorContext editorContext) {
      return factory.forChild(childNode);
    }
    @Override
    public void insertNewNode(final SNode node, final SNode anchorNode, final boolean insertBefore) {
    }
    @Override
    public void deleteNode(final SNode node, final SNode nodeToDelete) {
    }
    @Override
    protected EditorCell createNodeCellNotNull(final EditorContext context, @NotNull final SNode node) {
      EditorCell cell;
      cell = createCellDuplicatesSafe(new _FunctionTypes._return_P0_E0<EditorCell>() {
        public EditorCell invoke() {
          return context.getEditorComponent().getUpdater().getCurrentUpdateSession().updateReferencedNodeCell(new Computable<EditorCell>() {
            public EditorCell compute() {
              return context.getEditorComponent().getUpdater().getCurrentUpdateSession().updateChildNodeCell(node);
            }
          }, node, "querylist1970998948983905140");
        }
      });
      return cell;
    }

    private jetbrains.mps.openapi.editor.cells.EditorCell_Collection wrapWithCollection(EditorCell cell) {
      jetbrains.mps.openapi.editor.cells.EditorCell_Collection collection = EditorCell_Collection.createIndent2(myEditorContext, myOwnerNode);
      collection.addEditorCell(cell);
      return collection;
    }

  }
  private EditorCell createConstant_422lk5_c3a(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "<-");
    editorCell.setCellId("Constant_422lk5_c3a");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createQueryList_422lk5_d3a(final EditorContext editorContext, final SNode node) {

    return QueryListContext.computeWithContext(new QueryListContext(node), new _FunctionTypes._return_P0_E0<EditorCell_QueryList>() {
      public EditorCell_QueryList invoke() {
        QueryListHandler handler = new IComputedValueAttribute_Editor.QueryListHandler_422lk5_d3a(editorContext, node);

        EditorCell_QueryList editorCell = handler.createCells(editorContext, new CellLayout_Vertical());
        editorCell.setCellId("QueryList_422lk5_d3a");
        Style style = new StyleImpl();
        style.set(StyleAttributes.READ_ONLY, 0, true);
        editorCell.getStyle().putAll(style);
        editorCell.setGridLayout(true);
        editorCell.toggleCollapsed(renderingCondition_422lk5_a3d0(node, editorContext));
        return editorCell;
      }
    });

  }
  private static class QueryListHandler_422lk5_d3a extends QueryListHandler {
    public QueryListHandler_422lk5_d3a(EditorContext context, SNode ownerNode) {
      super(context, ownerNode);
    }
    public EditorCell createNodeCell(EditorContext editorContext, SNode elementNode) {
      EditorCell elementCell = super.createNodeCell(editorContext, elementNode);
      this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext);
      return elementCell;
    }
    @Override
    public EditorCell createEmptyCell(EditorContext editorContext) {
      EditorCell emptyCell = null;
      emptyCell = this.createEmptyCell_internal(editorContext, this.getOwner());
      this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext);
      return postProcessEmptyCell(emptyCell);
    }
    public EditorCell createEmptyCell_internal(EditorContext editorContext, SNode node) {
      return this.createConstant_422lk5_a3d0(editorContext, node);
    }
    public void installElementCellActions(SNode listOwner, SNode elementNode, EditorCell elementCell, EditorContext editorContext) {
      if (elementCell.getUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET) == null) {
        elementCell.putUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET, AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET);
        if (elementNode != null) {

          elementCell.setAction(CellActionType.DELETE, new CellAction_DeleteNode(elementNode));


        }
        if (elementCell.getSubstituteInfo() == null) {
          elementCell.setSubstituteInfo(getSubstituteInfo(elementNode));
        }
      }
    }
    private Object executeQuery(final SNode node, final EditorContext editorContext) {
      return (Iterable<SNode>) IComputedValueAttribute__BehaviorDescriptor.getContributingAttributes_id1HqphBIwqoi.invoke(node);
    }
    @Override
    public Iterable<? extends SNode> getNodesForList(final SNode node) {
      Object queryResult = executeQuery(node, getEditorContext());
      if (queryResult instanceof Iterable) {
        return (Iterable<? extends SNode>) queryResult;
      } else {
        return Sequence.<SNode>singleton((SNode) queryResult);
      }
    }
    @Override
    public SubstituteInfo getSubstituteInfo(final SNode node, final SNode childNode, final SubstituteInfoFactory factory, final EditorContext editorContext) {
      return factory.forChild(childNode);
    }
    @Override
    public void insertNewNode(final SNode node, final SNode anchorNode, final boolean insertBefore) {
    }
    @Override
    public void deleteNode(final SNode node, final SNode nodeToDelete) {
    }
    @Override
    protected EditorCell createNodeCellNotNull(final EditorContext context, @NotNull final SNode node) {
      EditorCell cell;
      {
        final InlineCellProvider provider = new IComputedValueAttribute_Editor._Inline_422lk5_a3d0();
        provider.setSNode(node);
        provider.setRefNode(myOwnerNode);
        cell = createCellDuplicatesSafe(new _FunctionTypes._return_P0_E0<EditorCell>() {
          public EditorCell invoke() {
            return provider.createEditorCell(context);
          }
        });
      }
      return cell;
    }

    private jetbrains.mps.openapi.editor.cells.EditorCell_Collection wrapWithCollection(EditorCell cell) {
      jetbrains.mps.openapi.editor.cells.EditorCell_Collection collection = EditorCell_Collection.createIndent2(myEditorContext, myOwnerNode);
      collection.addEditorCell(cell);
      return collection;
    }

    private EditorCell createConstant_422lk5_a3d0(EditorContext editorContext, SNode node) {
      EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "{...}");
      editorCell.setCellId("Constant_422lk5_a3d0");
      editorCell.setDefaultText("");
      return editorCell;
    }
  }
  private static boolean renderingCondition_422lk5_a3d0(SNode node, EditorContext editorContext) {
    return true;
  }
  public static class _Inline_422lk5_a3d0 extends InlineCellProvider {
    public _Inline_422lk5_a3d0() {
      super();
    }
    public EditorCell createEditorCell(EditorContext editorContext) {
      return this.createEditorCell(editorContext, this.getSNode());
    }
    public EditorCell createEditorCell(EditorContext editorContext, SNode node) {
      return this.createCollection_422lk5_a0d3a(editorContext, node);
    }
    private EditorCell createCollection_422lk5_a0d3a(EditorContext editorContext, SNode node) {
      EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(editorContext, node);
      editorCell.setCellId("Collection_422lk5_a0d3a");
      Style style = new StyleImpl();
      style.set(StyleAttributes.SELECTABLE, 0, false);
      editorCell.getStyle().putAll(style);
      editorCell.addEditorCell(this.createReadOnlyModelAccessor_422lk5_a0a3d0(editorContext, node));
      editorCell.addEditorCell(this.createConstant_422lk5_b0a3d0(editorContext, node));
      editorCell.addEditorCell(this.createRefNode_422lk5_c0a3d0(editorContext, node));
      return editorCell;
    }
    private EditorCell createReadOnlyModelAccessor_422lk5_a0a3d0(final EditorContext editorContext, final SNode node) {
      EditorCell_Property editorCell = EditorCell_Property.create(editorContext, new ModelAccessor() {
        public String getText() {
          return (String) IValueAttribute__BehaviorDescriptor.qualifiedPresentation_id1HqphBJ7KGf.invoke(node);
        }
        public void setText(String s) {
        }
        public boolean isValidText(String s) {
          return EqualUtil.equals(s, getText());
        }
      }, node);
      editorCell.setAction(CellActionType.DELETE, EmptyCellAction.getInstance());
      editorCell.setAction(CellActionType.BACKSPACE, EmptyCellAction.getInstance());
      editorCell.setCellId("ReadOnlyModelAccessor_422lk5_a0a3d0");
      Style style = new StyleImpl();
      style.set(StyleAttributes.NAVIGATABLE_NODE, 0, IComputedValueAttribute_Editor._Inline_422lk5_a3d0._StyleParameter_QueryFunction_422lk5_a0a0a3d0(editorContext, node));
      editorCell.getStyle().putAll(style);
      return editorCell;
    }
    private static SNode _StyleParameter_QueryFunction_422lk5_a0a0a3d0(EditorContext editorContext, SNode node) {
      return SNodeOperations.getParent(node);
    }
    private EditorCell createConstant_422lk5_b0a3d0(EditorContext editorContext, SNode node) {
      EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, ":");
      editorCell.setCellId("Constant_422lk5_b0a3d0");
      editorCell.setDefaultText("");
      return editorCell;
    }
    private EditorCell createRefNode_422lk5_c0a3d0(EditorContext editorContext, SNode node) {
      SingleRoleCellProvider provider = new IComputedValueAttribute_Editor._Inline_422lk5_a3d0.valueSingleRoleHandler_422lk5_c0a3d0(node, MetaAdapterFactory.getContainmentLink(0x583939beded04735L, 0xa055a74f8477fc34L, 0x1b5a6519ee876afdL, 0x1b5a6519ee9ef8b6L, "value"), editorContext);
      return provider.createCell();
    }
    private class valueSingleRoleHandler_422lk5_c0a3d0 extends SingleRoleCellProvider {
      public valueSingleRoleHandler_422lk5_c0a3d0(SNode ownerNode, SContainmentLink containmentLink, EditorContext context) {
        super(ownerNode, containmentLink, context);
      }
      protected EditorCell createChildCell(SNode child) {
        myEditorContext.getCellFactory().pushCellContext();
        myEditorContext.getCellFactory().setNodeLocation(new SNodeLocation.FromNode(child));
        try {
          EditorCell editorCell = super.createChildCell(child);
          editorCell.setAction(CellActionType.DELETE, new CellAction_DeleteSmart(myOwnerNode, MetaAdapterFactory.getContainmentLink(0x583939beded04735L, 0xa055a74f8477fc34L, 0x1b5a6519ee876afdL, 0x1b5a6519ee9ef8b6L, "value"), child));
          editorCell.setAction(CellActionType.BACKSPACE, new CellAction_DeleteSmart(myOwnerNode, MetaAdapterFactory.getContainmentLink(0x583939beded04735L, 0xa055a74f8477fc34L, 0x1b5a6519ee876afdL, 0x1b5a6519ee9ef8b6L, "value"), child));
          installCellInfo(child, editorCell);
          return editorCell;
        } finally {
          myEditorContext.getCellFactory().popCellContext();
        }
      }

      protected boolean isCompatibilityMode() {
        return false;
      }

      private void installCellInfo(SNode child, EditorCell editorCell) {
        if (editorCell.getSubstituteInfo() == null || editorCell.getSubstituteInfo() instanceof DefaultSubstituteInfo) {
          editorCell.setSubstituteInfo(new OldNewCompositeSubstituteInfo(myEditorContext, new SChildSubstituteInfo(editorCell, myOwnerNode, MetaAdapterFactory.getContainmentLink(0x583939beded04735L, 0xa055a74f8477fc34L, 0x1b5a6519ee876afdL, 0x1b5a6519ee9ef8b6L, "value"), child), new DefaultChildSubstituteInfo(myOwnerNode, myContainmentLink.getDeclarationNode(), myEditorContext)));
        }
        if (editorCell.getRole() == null) {
          editorCell.setRole("value");
        }
      }
      @Override
      protected EditorCell createEmptyCell() {
        myEditorContext.getCellFactory().pushCellContext();
        myEditorContext.getCellFactory().setNodeLocation(new SNodeLocation.FromParentAndLink(myOwnerNode, MetaAdapterFactory.getContainmentLink(0x583939beded04735L, 0xa055a74f8477fc34L, 0x1b5a6519ee876afdL, 0x1b5a6519ee9ef8b6L, "value")));
        try {
          EditorCell editorCell = super.createEmptyCell();
          editorCell.setCellId("empty_value");
          installCellInfo(null, editorCell);
          return editorCell;
        } finally {
          myEditorContext.getCellFactory().popCellContext();
        }
      }
      protected String getNoTargetText() {
        return "<no value>";
      }
    }
  }
}

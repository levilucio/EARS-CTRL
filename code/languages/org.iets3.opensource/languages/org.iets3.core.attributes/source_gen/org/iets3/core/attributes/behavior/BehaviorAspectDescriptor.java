package org.iets3.core.attributes.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Map;
import java.util.HashMap;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myIComputedValueAttribute__BehaviorDescriptor = new IComputedValueAttribute__BehaviorDescriptor();
  private final BHDescriptor myIValueAttribute__BehaviorDescriptor = new IValueAttribute__BehaviorDescriptor();
  private final BHDescriptor myAttributeValue__BehaviorDescriptor = new AttributeValue__BehaviorDescriptor();
  private final BHDescriptor myIAttribute__BehaviorDescriptor = new IAttribute__BehaviorDescriptor();
  private final BHDescriptor myIAttributed__BehaviorDescriptor = new IAttributed__BehaviorDescriptor();

  public BehaviorAspectDescriptor() {
  }

  @Nullable
  public BHDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    {
      SAbstractConcept cncpt = concept;
      Integer preIndex = indices_846f5o_a0i.get(cncpt);
      int switchIndex = (preIndex == null ? -1 : preIndex);
      switch (switchIndex) {
        case 0:
          if (true) {
            return myAttributeValue__BehaviorDescriptor;
          }
          break;
        case 1:
          if (true) {
            return myIAttribute__BehaviorDescriptor;
          }
          break;
        case 2:
          if (true) {
            return myIAttributed__BehaviorDescriptor;
          }
          break;
        case 3:
          if (true) {
            return myIComputedValueAttribute__BehaviorDescriptor;
          }
          break;
        case 4:
          if (true) {
            return myIValueAttribute__BehaviorDescriptor;
          }
          break;
        default:
          // default 
      }
    }
    return null;
  }
  private static Map<SAbstractConcept, Integer> buildConceptIndices(SAbstractConcept... concepts) {
    HashMap<SAbstractConcept, Integer> res = new HashMap<SAbstractConcept, Integer>();
    int counter = 0;
    for (SAbstractConcept c : concepts) {
      res.put(c, counter++);
    }
    return res;
  }
  private static final Map<SAbstractConcept, Integer> indices_846f5o_a0i = buildConceptIndices(MetaAdapterFactory.getConcept(0x583939beded04735L, 0xa055a74f8477fc34L, 0x1b5a6519ee956206L, "org.iets3.core.attributes.structure.AttributeValue"), MetaAdapterFactory.getInterfaceConcept(0x583939beded04735L, 0xa055a74f8477fc34L, 0x3ce7d489744328bbL, "org.iets3.core.attributes.structure.IAttribute"), MetaAdapterFactory.getInterfaceConcept(0x583939beded04735L, 0xa055a74f8477fc34L, 0x3ce7d48974432ecdL, "org.iets3.core.attributes.structure.IAttributed"), MetaAdapterFactory.getInterfaceConcept(0x583939beded04735L, 0xa055a74f8477fc34L, 0x1b5a6519ee80ad54L, "org.iets3.core.attributes.structure.IComputedValueAttribute"), MetaAdapterFactory.getInterfaceConcept(0x583939beded04735L, 0xa055a74f8477fc34L, 0x1b5a6519ee876afdL, "org.iets3.core.attributes.structure.IValueAttribute"));
}

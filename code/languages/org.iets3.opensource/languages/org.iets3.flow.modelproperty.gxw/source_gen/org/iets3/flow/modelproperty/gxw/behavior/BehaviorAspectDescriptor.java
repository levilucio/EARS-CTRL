package org.iets3.flow.modelproperty.gxw.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Map;
import java.util.HashMap;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myAllGlossaryTermsUsed__BehaviorDescriptor = new AllGlossaryTermsUsed__BehaviorDescriptor();
  private final BHDescriptor myRequirementRealizable__BehaviorDescriptor = new RequirementRealizable__BehaviorDescriptor();
  private final BHDescriptor myGLossaryisCreatedProperty__BehaviorDescriptor = new GLossaryisCreatedProperty__BehaviorDescriptor();
  private final BHDescriptor myGLossaryErrorFreeProperty__BehaviorDescriptor = new GLossaryErrorFreeProperty__BehaviorDescriptor();
  private final BHDescriptor myRequirementChunkPresentProperty__BehaviorDescriptor = new RequirementChunkPresentProperty__BehaviorDescriptor();
  private final BHDescriptor myComponentDefinedProperty__BehaviorDescriptor = new ComponentDefinedProperty__BehaviorDescriptor();
  private final BHDescriptor myActuatorDefinedProperty__BehaviorDescriptor = new ActuatorDefinedProperty__BehaviorDescriptor();
  private final BHDescriptor myModelProperty__BehaviorDescriptor = new ModelProperty__BehaviorDescriptor();

  public BehaviorAspectDescriptor() {
  }

  @Nullable
  public BHDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    {
      SAbstractConcept cncpt = concept;
      Integer preIndex = indices_846f5o_a0l.get(cncpt);
      int switchIndex = (preIndex == null ? -1 : preIndex);
      switch (switchIndex) {
        case 0:
          if (true) {
            return myActuatorDefinedProperty__BehaviorDescriptor;
          }
          break;
        case 1:
          if (true) {
            return myAllGlossaryTermsUsed__BehaviorDescriptor;
          }
          break;
        case 2:
          if (true) {
            return myComponentDefinedProperty__BehaviorDescriptor;
          }
          break;
        case 3:
          if (true) {
            return myGLossaryErrorFreeProperty__BehaviorDescriptor;
          }
          break;
        case 4:
          if (true) {
            return myGLossaryisCreatedProperty__BehaviorDescriptor;
          }
          break;
        case 5:
          if (true) {
            return myModelProperty__BehaviorDescriptor;
          }
          break;
        case 6:
          if (true) {
            return myRequirementChunkPresentProperty__BehaviorDescriptor;
          }
          break;
        case 7:
          if (true) {
            return myRequirementRealizable__BehaviorDescriptor;
          }
          break;
        default:
          // default 
      }
    }
    return null;
  }
  private static Map<SAbstractConcept, Integer> buildConceptIndices(SAbstractConcept... concepts) {
    HashMap<SAbstractConcept, Integer> res = new HashMap<SAbstractConcept, Integer>();
    int counter = 0;
    for (SAbstractConcept c : concepts) {
      res.put(c, counter++);
    }
    return res;
  }
  private static final Map<SAbstractConcept, Integer> indices_846f5o_a0l = buildConceptIndices(MetaAdapterFactory.getConcept(0x3e3749e596c04132L, 0x8c4a7309a74f9fd6L, 0x5567236ee48b4382L, "org.iets3.flow.modelproperty.gxw.structure.ActuatorDefinedProperty"), MetaAdapterFactory.getConcept(0x3e3749e596c04132L, 0x8c4a7309a74f9fd6L, 0x6477a78990a6aedL, "org.iets3.flow.modelproperty.gxw.structure.AllGlossaryTermsUsed"), MetaAdapterFactory.getConcept(0x3e3749e596c04132L, 0x8c4a7309a74f9fd6L, 0x5567236ee4693f1cL, "org.iets3.flow.modelproperty.gxw.structure.ComponentDefinedProperty"), MetaAdapterFactory.getConcept(0x3e3749e596c04132L, 0x8c4a7309a74f9fd6L, 0x5567236ee4631d3cL, "org.iets3.flow.modelproperty.gxw.structure.GLossaryErrorFreeProperty"), MetaAdapterFactory.getConcept(0x3e3749e596c04132L, 0x8c4a7309a74f9fd6L, 0x5567236ee43f4b2fL, "org.iets3.flow.modelproperty.gxw.structure.GLossaryisCreatedProperty"), MetaAdapterFactory.getConcept(0x3e3749e596c04132L, 0x8c4a7309a74f9fd6L, 0x56e0c2409a3be91bL, "org.iets3.flow.modelproperty.gxw.structure.ModelProperty"), MetaAdapterFactory.getConcept(0x3e3749e596c04132L, 0x8c4a7309a74f9fd6L, 0x5567236ee467f31fL, "org.iets3.flow.modelproperty.gxw.structure.RequirementChunkPresentProperty"), MetaAdapterFactory.getConcept(0x3e3749e596c04132L, 0x8c4a7309a74f9fd6L, 0x4cb0e8cd55e29317L, "org.iets3.flow.modelproperty.gxw.structure.RequirementRealizable"));
}

package org.iets3.core.base.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.concept.SConceptAdapterById;
import jetbrains.mps.smodel.adapter.structure.concept.SInterfaceConceptAdapterById;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.SNodePointer;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(14);
  /*package*/ final ConceptDescriptor myConceptICanReadPersistentResult = createDescriptorForICanReadPersistentResult();
  /*package*/ final ConceptDescriptor myConceptICanRunCheckManually = createDescriptorForICanRunCheckManually();
  /*package*/ final ConceptDescriptor myConceptICanStoreCheckResult = createDescriptorForICanStoreCheckResult();
  /*package*/ final ConceptDescriptor myConceptICanStorePersistentResult = createDescriptorForICanStorePersistentResult();
  /*package*/ final ConceptDescriptor myConceptIContainsStuffToRunManually = createDescriptorForIContainsStuffToRunManually();
  /*package*/ final ConceptDescriptor myConceptICustomRemoteCreateSupport = createDescriptorForICustomRemoteCreateSupport();
  /*package*/ final ConceptDescriptor myConceptIDetectNeedToRunManually = createDescriptorForIDetectNeedToRunManually();
  /*package*/ final ConceptDescriptor myConceptIETS3DummyIcon16 = createDescriptorForIETS3DummyIcon16();
  /*package*/ final ConceptDescriptor myConceptIETS3DummyIcon24 = createDescriptorForIETS3DummyIcon24();
  /*package*/ final ConceptDescriptor myConceptIETS3DummyIcon32 = createDescriptorForIETS3DummyIcon32();
  /*package*/ final ConceptDescriptor myConceptIOptionallyNamed = createDescriptorForIOptionallyNamed();
  /*package*/ final ConceptDescriptor myConceptISpecRoot = createDescriptorForISpecRoot();
  /*package*/ final ConceptDescriptor myConceptIValidNamedConcept = createDescriptorForIValidNamedConcept();
  /*package*/ final ConceptDescriptor myConceptOptionalNameSpecifier = createDescriptorForOptionalNameSpecifier();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptICanReadPersistentResult.getId(), 0);
    myIndexMap.put(myConceptICanRunCheckManually.getId(), 1);
    myIndexMap.put(myConceptICanStoreCheckResult.getId(), 2);
    myIndexMap.put(myConceptICanStorePersistentResult.getId(), 3);
    myIndexMap.put(myConceptIContainsStuffToRunManually.getId(), 4);
    myIndexMap.put(myConceptICustomRemoteCreateSupport.getId(), 5);
    myIndexMap.put(myConceptIDetectNeedToRunManually.getId(), 6);
    myIndexMap.put(myConceptIETS3DummyIcon16.getId(), 7);
    myIndexMap.put(myConceptIETS3DummyIcon24.getId(), 8);
    myIndexMap.put(myConceptIETS3DummyIcon32.getId(), 9);
    myIndexMap.put(myConceptIOptionallyNamed.getId(), 10);
    myIndexMap.put(myConceptISpecRoot.getId(), 11);
    myIndexMap.put(myConceptIValidNamedConcept.getId(), 12);
    myIndexMap.put(myConceptOptionalNameSpecifier.getId(), 13);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptICanReadPersistentResult, myConceptICanRunCheckManually, myConceptICanStoreCheckResult, myConceptICanStorePersistentResult, myConceptIContainsStuffToRunManually, myConceptICustomRemoteCreateSupport, myConceptIDetectNeedToRunManually, myConceptIETS3DummyIcon16, myConceptIETS3DummyIcon24, myConceptIETS3DummyIcon32, myConceptIOptionallyNamed, myConceptISpecRoot, myConceptIValidNamedConcept, myConceptOptionalNameSpecifier);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptICanReadPersistentResult;
      case 1:
        return myConceptICanRunCheckManually;
      case 2:
        return myConceptICanStoreCheckResult;
      case 3:
        return myConceptICanStorePersistentResult;
      case 4:
        return myConceptIContainsStuffToRunManually;
      case 5:
        return myConceptICustomRemoteCreateSupport;
      case 6:
        return myConceptIDetectNeedToRunManually;
      case 7:
        return myConceptIETS3DummyIcon16;
      case 8:
        return myConceptIETS3DummyIcon24;
      case 9:
        return myConceptIETS3DummyIcon32;
      case 10:
        return myConceptIOptionallyNamed;
      case 11:
        return myConceptISpecRoot;
      case 12:
        return myConceptIValidNamedConcept;
      case 13:
        return myConceptOptionalNameSpecifier;
      default:
        throw new IllegalStateException();
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    Integer res = null;
    if (c instanceof SConceptAdapterById) {
      res = myIndexMap.get(((SConceptAdapterById) c).getId());
    } else if (c instanceof SInterfaceConceptAdapterById) {
      res = myIndexMap.get(((SInterfaceConceptAdapterById) c).getId());
    }
    return (res == null ? -1 : res);
  }

  private static ConceptDescriptor createDescriptorForICanReadPersistentResult() {
    return new ConceptDescriptorBuilder("org.iets3.core.base.structure.ICanReadPersistentResult", MetaIdFactory.conceptId(0x7b68d745a7b848b9L, 0xbd9c05c0f8725a35L, 0x3b86953aeeff3565L)).version(1).interface_().sourceNode(new SNodePointer("r:657c9fde-2f36-4e61-ae17-20f02b8630ad(org.iets3.core.base.structure)", "4289279775467320677")).create();
  }
  private static ConceptDescriptor createDescriptorForICanRunCheckManually() {
    return new ConceptDescriptorBuilder("org.iets3.core.base.structure.ICanRunCheckManually", MetaIdFactory.conceptId(0x7b68d745a7b848b9L, 0xbd9c05c0f8725a35L, 0x3dc39ae7de59be3aL)).version(1).interface_().parents("org.iets3.core.base.structure.ICanStoreCheckResult").parentIds(MetaIdFactory.conceptId(0x7b68d745a7b848b9L, 0xbd9c05c0f8725a35L, 0x3dc39ae7decbd830L)).sourceNode(new SNodePointer("r:657c9fde-2f36-4e61-ae17-20f02b8630ad(org.iets3.core.base.structure)", "4450571177430728250")).create();
  }
  private static ConceptDescriptor createDescriptorForICanStoreCheckResult() {
    return new ConceptDescriptorBuilder("org.iets3.core.base.structure.ICanStoreCheckResult", MetaIdFactory.conceptId(0x7b68d745a7b848b9L, 0xbd9c05c0f8725a35L, 0x3dc39ae7decbd830L)).version(1).interface_().sourceNode(new SNodePointer("r:657c9fde-2f36-4e61-ae17-20f02b8630ad(org.iets3.core.base.structure)", "4450571177438206000")).create();
  }
  private static ConceptDescriptor createDescriptorForICanStorePersistentResult() {
    return new ConceptDescriptorBuilder("org.iets3.core.base.structure.ICanStorePersistentResult", MetaIdFactory.conceptId(0x7b68d745a7b848b9L, 0xbd9c05c0f8725a35L, 0x2b59559d694dcd4cL)).version(1).interface_().parents("org.iets3.core.base.structure.ICanReadPersistentResult").parentIds(MetaIdFactory.conceptId(0x7b68d745a7b848b9L, 0xbd9c05c0f8725a35L, 0x3b86953aeeff3565L)).sourceNode(new SNodePointer("r:657c9fde-2f36-4e61-ae17-20f02b8630ad(org.iets3.core.base.structure)", "3123621951123082572")).create();
  }
  private static ConceptDescriptor createDescriptorForIContainsStuffToRunManually() {
    return new ConceptDescriptorBuilder("org.iets3.core.base.structure.IContainsStuffToRunManually", MetaIdFactory.conceptId(0x7b68d745a7b848b9L, 0xbd9c05c0f8725a35L, 0xe5ee756dfdd8a45L)).version(1).interface_().sourceNode(new SNodePointer("r:657c9fde-2f36-4e61-ae17-20f02b8630ad(org.iets3.core.base.structure)", "1035519324650834501")).create();
  }
  private static ConceptDescriptor createDescriptorForICustomRemoteCreateSupport() {
    return new ConceptDescriptorBuilder("org.iets3.core.base.structure.ICustomRemoteCreateSupport", MetaIdFactory.conceptId(0x7b68d745a7b848b9L, 0xbd9c05c0f8725a35L, 0x1fb563bdc7aca84fL)).version(1).interface_().sourceNode(new SNodePointer("r:657c9fde-2f36-4e61-ae17-20f02b8630ad(org.iets3.core.base.structure)", "2284842052710344783")).create();
  }
  private static ConceptDescriptor createDescriptorForIDetectNeedToRunManually() {
    return new ConceptDescriptorBuilder("org.iets3.core.base.structure.IDetectNeedToRunManually", MetaIdFactory.conceptId(0x7b68d745a7b848b9L, 0xbd9c05c0f8725a35L, 0x6caf8a4d6c71bb55L)).version(1).interface_().parents("org.iets3.core.base.structure.ICanRunCheckManually").parentIds(MetaIdFactory.conceptId(0x7b68d745a7b848b9L, 0xbd9c05c0f8725a35L, 0x3dc39ae7de59be3aL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x6caf8a4d6c71bb71L, "__hash", new SNodePointer("r:657c9fde-2f36-4e61-ae17-20f02b8630ad(org.iets3.core.base.structure)", "7831630342157089649"))).properties("__hash").sourceNode(new SNodePointer("r:657c9fde-2f36-4e61-ae17-20f02b8630ad(org.iets3.core.base.structure)", "7831630342157089621")).create();
  }
  private static ConceptDescriptor createDescriptorForIETS3DummyIcon16() {
    return new ConceptDescriptorBuilder("org.iets3.core.base.structure.IETS3DummyIcon16", MetaIdFactory.conceptId(0x7b68d745a7b848b9L, 0xbd9c05c0f8725a35L, 0x6c4f9fd23e580a22L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).sourceNode(new SNodePointer("r:657c9fde-2f36-4e61-ae17-20f02b8630ad(org.iets3.core.base.structure)", "7804632404594264610")).create();
  }
  private static ConceptDescriptor createDescriptorForIETS3DummyIcon24() {
    return new ConceptDescriptorBuilder("org.iets3.core.base.structure.IETS3DummyIcon24", MetaIdFactory.conceptId(0x7b68d745a7b848b9L, 0xbd9c05c0f8725a35L, 0x4e1376cfa392829bL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).sourceNode(new SNodePointer("r:657c9fde-2f36-4e61-ae17-20f02b8630ad(org.iets3.core.base.structure)", "5625970993690477211")).create();
  }
  private static ConceptDescriptor createDescriptorForIETS3DummyIcon32() {
    return new ConceptDescriptorBuilder("org.iets3.core.base.structure.IETS3DummyIcon32", MetaIdFactory.conceptId(0x7b68d745a7b848b9L, 0xbd9c05c0f8725a35L, 0x4e1376cfa38aadf9L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).sourceNode(new SNodePointer("r:657c9fde-2f36-4e61-ae17-20f02b8630ad(org.iets3.core.base.structure)", "5625970993689964025")).create();
  }
  private static ConceptDescriptor createDescriptorForIOptionallyNamed() {
    return new ConceptDescriptorBuilder("org.iets3.core.base.structure.IOptionallyNamed", MetaIdFactory.conceptId(0x7b68d745a7b848b9L, 0xbd9c05c0f8725a35L, 0x32f64a31a100207L)).version(1).interface_().parents("org.iets3.core.base.structure.IValidNamedConcept").parentIds(MetaIdFactory.conceptId(0x7b68d745a7b848b9L, 0xbd9c05c0f8725a35L, 0x32f64a31a179034L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x32f64a31a1004e8L, "optionalName", MetaIdFactory.conceptId(0x7b68d745a7b848b9L, 0xbd9c05c0f8725a35L, 0x32f64a31a10020aL), true, false, false, new SNodePointer("r:657c9fde-2f36-4e61-ae17-20f02b8630ad(org.iets3.core.base.structure)", "229512757698888936"))).children(new String[]{"optionalName"}, new boolean[]{false}).sourceNode(new SNodePointer("r:657c9fde-2f36-4e61-ae17-20f02b8630ad(org.iets3.core.base.structure)", "229512757698888199")).create();
  }
  private static ConceptDescriptor createDescriptorForISpecRoot() {
    return new ConceptDescriptorBuilder("org.iets3.core.base.structure.ISpecRoot", MetaIdFactory.conceptId(0x7b68d745a7b848b9L, 0xbd9c05c0f8725a35L, 0x6c4f9fd23e57eb38L)).version(1).interface_().parents("org.iets3.core.base.structure.IValidNamedConcept").parentIds(MetaIdFactory.conceptId(0x7b68d745a7b848b9L, 0xbd9c05c0f8725a35L, 0x32f64a31a179034L)).sourceNode(new SNodePointer("r:657c9fde-2f36-4e61-ae17-20f02b8630ad(org.iets3.core.base.structure)", "7804632404594256696")).create();
  }
  private static ConceptDescriptor createDescriptorForIValidNamedConcept() {
    return new ConceptDescriptorBuilder("org.iets3.core.base.structure.IValidNamedConcept", MetaIdFactory.conceptId(0x7b68d745a7b848b9L, 0xbd9c05c0f8725a35L, 0x32f64a31a179034L)).version(1).interface_().parents("jetbrains.mps.lang.core.structure.INamedConcept", "jetbrains.mps.lang.core.structure.IResolveInfo").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x116b17c6e46L)).sourceNode(new SNodePointer("r:657c9fde-2f36-4e61-ae17-20f02b8630ad(org.iets3.core.base.structure)", "229512757699383348")).create();
  }
  private static ConceptDescriptor createDescriptorForOptionalNameSpecifier() {
    return new ConceptDescriptorBuilder("org.iets3.core.base.structure.OptionalNameSpecifier", MetaIdFactory.conceptId(0x7b68d745a7b848b9L, 0xbd9c05c0f8725a35L, 0x32f64a31a10020aL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x32f64a31a10020bL, "optionalName", new SNodePointer("r:657c9fde-2f36-4e61-ae17-20f02b8630ad(org.iets3.core.base.structure)", "229512757698888203"))).properties("optionalName").sourceNode(new SNodePointer("r:657c9fde-2f36-4e61-ae17-20f02b8630ad(org.iets3.core.base.structure)", "229512757698888202")).create();
  }
}

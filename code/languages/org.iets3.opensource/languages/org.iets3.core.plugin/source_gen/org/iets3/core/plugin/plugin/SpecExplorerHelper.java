package org.iets3.core.plugin.plugin;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SModel;
import jetbrains.mps.project.Project;
import jetbrains.mps.internal.collections.runtime.Sequence;
import org.jetbrains.mps.openapi.module.SModule;
import jetbrains.mps.internal.collections.runtime.ITranslator2;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class SpecExplorerHelper {

  public static Iterable<SModel> getSpecModels(Project project) {
    Iterable<SModel> models = Sequence.fromIterable(((Iterable<SModule>) project.getModules())).translate(new ITranslator2<SModule, SModel>() {
      public Iterable<SModel> translate(SModule it) {
        return it.getModels();
      }
    });
    return Sequence.fromIterable(models).where(new IWhereFilter<SModel>() {
      public boolean accept(SModel it) {
        return ListSequence.fromList(SModelOperations.roots(it, MetaAdapterFactory.getInterfaceConcept(0x7b68d745a7b848b9L, 0xbd9c05c0f8725a35L, 0x6c4f9fd23e57eb38L, "org.iets3.core.base.structure.ISpecRoot"))).isNotEmpty();
      }
    });
  }

}
